@model DodgeDynasty.Models.Account.UserInfoModel

<div id="userInfo">
	<script type="text/javascript">
		$(function () {
			initUserInfo();
		});
	</script>
	@{ Html.EnableClientValidation(true); }
	<div class="error-messages">
		@Html.ValidationSummary(true)
		<div class="blank-team-msg invalid hide-yo-wives">Error - Team Name cannot be left blank.</div>
	</div>
	<div class="page-entries">
		@{
			string actionName = Model.AdminMode ? "UserInfo" : "MyInfo";
			string controllerName = Model.AdminMode ? "Admin" : "Account";
		}
		@using (Html.BeginForm(actionName, controllerName, FormMethod.Post, new { id = "userInfoForm" }))
		{
			<div class="mi-user-entry">
				<div class="mi-user-entry-header">
					@if (Model.AdminMode)
					{
						@Html.LabelFor(m => m.UserName, new { @class = "mi-user-header" })
					}
					@Html.LabelFor(m => m.FirstName, new { @class = "mi-first-header" })
					@Html.LabelFor(m => m.LastName, new { @class = "mi-last-header" })
					@Html.LabelFor(m => m.NickName, new { @class = "mi-nick-header" })
				</div>
				<div class="mi-user-entry-name block-error">
					@if (Model.AdminMode)
					{
						@Html.DropDownListFor(u => u.UserName, Model.GetUserListItems(Model.UserName), new { @class = "mi-user-name" })
					}
					@Html.TextBoxFor(m => m.FirstName, new { @class = "mi-first-name", maxLength = "15", autofocus = "autofocus" })
					@Html.TextBoxFor(m => m.LastName, new { @class = "mi-last-name", maxLength = "25" })
					@Html.TextBoxFor(m => m.NickName, new { @class = "mi-nick-name", maxLength = "10" })
					@Html.ValidationMessageFor(m => m.FirstName)
					@Html.ValidationMessageFor(m => m.LastName)
					@Html.ValidationMessageFor(m => m.NickName)
				</div>
			</div>
			<div class="mi-league-entry-section page-section">
				<div class="mi-leagues mobile-touch-scroll">
					@if (Model.OwnerLeagues.Count > 0)
					{
						<div class="mi-league-entry-header">
							<label class="mi-league-header">League</label>
							<label class="mi-teamname-header">Team Name</label>
							<label class="mi-color-header">Color</label>
							<label class="mi-active-header">Active?</label>
						</div>
					}
					@for (int i = 0; i < Model.OwnerLeagues.Count; i++)
					{
						<div class="mi-league-entry" data-league-id="@Model.OwnerLeagues[i].LeagueId">
							@Html.HiddenFor(o => Model.OwnerLeagues[i].LeagueId)
							@Html.HiddenFor(o => Model.OwnerLeagues[i].LeagueName)
							<span class="mi-league">
								<span class="mi-league-name">@Model.OwnerLeagues[i].LeagueName</span>
							</span>
							<span class="mi-team-name">
								@Html.TextBoxFor(o => Model.OwnerLeagues[i].TeamName, new { @class = "mi-team-input", maxLength = "50" })
							</span>
							<span class="mi-color">
								<span class="mi-outer outline">
									<span class="mi-selected-color @Model.OwnerLeagues[i].CssClass">
										@Html.DropDownListFor(o => Model.OwnerLeagues[i].CssClass,
												  Model.GetLeagueColorOptions(Model.OwnerLeagues[i].LeagueId, Model.OwnerLeagues[i].CssClass),
												new { @class = "mi-color-select" })
									</span>
								</span>
							</span>
							<span class="mi-active">
								@Html.CheckBoxFor(o => Model.OwnerLeagues[i].IsActive, new { @class = "mi-active-chkbx" })
							</span>
						</div>
					}
				</div>
			</div>
			<div class="page-section"><button class="submit-info" type="submit">Submit</button></div>
		}
	</div>
</div>