<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	@{ var isStartDrafting = DodgeDynasty.Shared.Utilities.IsStartDraftingDomain(Request);}
	<title>@ViewBag.Title - @(isStartDrafting ? "StartDrafting" : "Dodge Dynasty League")</title>
	@if (isStartDrafting)
	{
	<link href="@Url.Content("~/Content/images/SD-favicon.ico")" rel="shortcut icon" type="image/x-icon" />
	<link href="@Url.Content("~/Content/images/SD-touch.png")" rel="apple-touch-icon" >
	}
	else
	{
	<link href="@Url.Content("~/Content/images/DD-favicon.ico")" rel="shortcut icon" type="image/x-icon" />
	<link href="@Url.Content("~/Content/images/DD-touch.png")" rel="apple-touch-icon">
	}
	<meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1.0, maximum-scale=1.5, user-scalable=yes" />
	@Styles.Render("~/Content/css")
	@Styles.Render("~/Content/themes/base/css")
	@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/lib")
	@{
		var webSocketsKillSwitch = System.Configuration.ConfigurationManager.AppSettings[DodgeDynasty.Shared.Constants.AppSettings.WebSocketsKillSwitch];
		var draftChatKillSwitch = System.Configuration.ConfigurationManager.AppSettings[DodgeDynasty.Shared.Constants.AppSettings.DraftChatKillSwitch];
		var audioKillSwitch = System.Configuration.ConfigurationManager.AppSettings[DodgeDynasty.Shared.Constants.AppSettings.AudioKillSwitch];
		var textToVoiceKillSwitch = System.Configuration.ConfigurationManager.AppSettings[DodgeDynasty.Shared.Constants.AppSettings.TextToVoiceKillSwitch];
		var userEditAudioKillSwitch = System.Configuration.ConfigurationManager.AppSettings[DodgeDynasty.Shared.Constants.AppSettings.UserEditAudioKillSwitch];
		var tickingClockAudioKillSwitch = "";
		if (DodgeDynasty.Shared.Utilities.IsUserLoggedIn() && !DodgeDynasty.Shared.Utilities.ToBool(webSocketsKillSwitch))
		{
			<script src="@Url.Content("~/signalr/hubs")"></script>
		}
	}
	<script type="text/javascript" src="@Url.Script("~/Scripts/Site.js")"></script>
	@if (DodgeDynasty.Shared.Utilities.IsUserLoggedIn())
	{
		@Html.Partial(DodgeDynasty.Shared.Constants.Views.ColorStyles)
	}
</head>
<body class="header-freeze">
	<header>
		<div class="header-top"></div>
		<div class="content-wrapper">
			<div class="float-left">
				<p class="site-logo" ondblclick="javascript:$('<a target=\'_new\' href=\'https://www.youtube.com/watch?v=DmL12NRE4hQ\'/>')[0].click();" >
					@if (isStartDrafting)
					{
					<img src="@Url.Content("~/Content/images/StartDrafting.png")" class="site-logo-img" />
					<img src="@Url.Content("~/Content/images/SD.png")" class="site-logo-img-mobile" />
					}
					else
					{
					<img src="@Url.Content("~/Content/images/DodgeDynasty.png")" class="site-logo-img" />
					<img src="@Url.Content("~/Content/images/DD.png")" class="site-logo-img-mobile" />
					}
				</p>
			</div>
			<div>
				<nav>
					@{
						var msgCount = 0;
						var msgCountDisplay = "";
						var userRoleAccessModel = new DodgeDynasty.Models.Account.RoleAccessModel();
					}
					<ul class="menu top-nav">
						@if (DodgeDynasty.Shared.Utilities.IsUserLoggedIn())
						{
							var draftId = DodgeDynasty.Shared.Utilities.GetRouteDraftId(Url.RequestContext.RouteData);
							var historyMode = Request.QueryString[DodgeDynasty.Shared.Constants.QS.HistoryMode];
							msgCount = DodgeDynasty.Shared.DBUtilities.GetMessageCountModel().NewMessages.Count;
							msgCountDisplay = DodgeDynasty.Shared.Utilities.GetMessageCountDisplay(msgCount);
							userRoleAccessModel = DodgeDynasty.Shared.DBUtilities.GetCurrentUserRoleAccess();
							if (draftId != null && DodgeDynasty.Shared.Utilities.ToBool(historyMode))
							{
								<li id="nav-opt-pick">@Html.ActionLink("Pick", "Pick/" + draftId, "Draft", new { historyMode = "true" }, null)</li>
								<li>@Html.ActionLink("Draft", "Display/" + draftId, "Draft", new { historyMode = "true" }, null)</li>
								<li>@Html.ActionLink("Teams", "TeamDisplay/" + draftId, "Draft", new { historyMode = "true" }, null)</li>
								<li>@Html.ActionLink("Ranks", "BestAvailable/" + draftId, "Draft", new { historyMode = "true" }, null)</li>
							}
							else
							{
								<li id="nav-opt-pick">@Html.ActionLink("Pick", "Pick", "Draft")</li>
								<li>@Html.ActionLink("Draft", "Display", "Draft")</li>
								<li>@Html.ActionLink("Teams", "TeamDisplay", "Draft")</li>
								<li>@Html.ActionLink("Ranks", "BestAvailable", "Draft")</li>
							}
							<li class="toggle-li">
								@if (userRoleAccessModel.IsUserAdmin && userRoleAccessModel.NewPlayerAdjExists)
								{
									<button type="button" class="navbar-toggle invalid-border" data-toggle="collapse" data-target=".navbar-collapse">
										<span class="icon-bar"></span>
										<span class="icon-bar"></span>
										<span class="icon-bar"></span>
									</button>
								}
								else
								{
									<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
										<span class="icon-bar"></span>
										<span class="icon-bar"></span>
										<span class="icon-bar"></span>
									</button>
								}
								<span class="toggle-msgs-section">
									@if (msgCount > 0)
									{
										<a id="toggle-msgs-link" href="#">
											<span class="toggle-msgs">@msgCountDisplay</span>
										</a>
									}
								</span>
							</li>
						}
						else
						{
							<li>@Html.ActionLink("Home", "Index", "Home")</li>
							<li>@Html.ActionLink("About", "About", "Home")</li>
							<li>
								@Html.ActionLink("Login", "Login", "Account")
								<span class="toggle-msgs-section"></span>
							</li>
						}
					</ul>
					@if (DodgeDynasty.Shared.Utilities.IsUserLoggedIn())
					{
					<div class="navbar-collapse collapse">
						<ul class="menu nav navbar-nav">
							<li>@Html.ActionLink("History", "History", "Draft")</li>
							<li>
								<a href="@Url.Action("Messages", "Site")">
									Messages
									@if (msgCount > 0)
									{
										<span class="menu-msgs-section">
											<span class="menu-msgs">@msgCountDisplay</span>
										</span>
									}
								</a>
							</li>
							<li class="dropdown">
								<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button"
								   aria-expanded="false">Settings<span class="caret"></span></a>
								<ul class="dropdown-menu" role="menu">
									<li>@Html.ActionLink("Change Password", "ChangePassword", "Account")</li>
									<li>@Html.ActionLink("My Info", "MyInfo", "Account")</li>
									<li>@Html.ActionLink("Logout", "Logout", "Account")</li>
									<!--<li class="divider"></li>-->
								</ul>
							</li>
							@if (userRoleAccessModel.IsUserAdmin)
							{
								<li class="dropdown">
									<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button"
									   aria-expanded="false">Admin<span class="caret"></span></a>
									<ul class="dropdown-menu" role="menu">
										<li>@Html.ActionLink("Change User Password", "ChangePassword", "Admin")</li>
										<li>@Html.ActionLink("Manage Users", "ManageUsers", "Admin")</li>
										<li>@Html.ActionLink("Manage Leagues/Drafts", "ManageLeagues", "Admin")</li>
										<li>@Html.ActionLink("Setup Draft Picks", "SetupDraft", "Admin")</li>
										<li>@Html.ActionLink("Activate Draft", "ActivateDraft", "Admin")</li>
										<li>@Html.ActionLink("Enter Draft Pick", "Input", "Admin")</li>
										<li><a href="#" class="menu-broadcast-draft">Broadcast Draft Pick</a></li>
										@if (userRoleAccessModel.NewPlayerAdjExists)
										{
											<li>@Html.ActionLink("Player Adjustments", "PlayerAdjustments", "Admin", null, new { @class="invalid-border" })</li>
										}
										else
										{
											<li>@Html.ActionLink("Player Adjustments", "PlayerAdjustments", "Admin")</li>
										}
										<li>@Html.ActionLink("Rank Adjustments", "RankAdjustments", "Admin")</li>
										<!--<li class="divider"></li>-->
									</ul>
								</li>
							}
							else if (userRoleAccessModel.IsUserCommish)
							{
								<li class="dropdown">
									<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button"
									   aria-expanded="false">Commish<span class="caret"></span></a>
									<ul class="dropdown-menu" role="menu">
										<li>@Html.ActionLink("Manage Leagues", "ManageLeagues", "Commish")</li>
										<li>@Html.ActionLink("Manage Drafts", "ManageDrafts", "Commish")</li>
										<li>@Html.ActionLink("Setup Draft Picks", "SetupDraft", "Commish")</li>
										<li>@Html.ActionLink("Activate Draft", "ActivateDraft", "Commish")</li>
										<li>@Html.ActionLink("Enter Draft Pick", "Input", "Commish")</li>
									</ul>
								</li>
							}
						</ul>
					</div>
					}
				</nav>
			</div>
		</div>
	</header>
	<div class="content-width">
		<div id="body">
			@RenderSection("featured", required: false)
			<section class="content-wrapper main-content clear-fix">
				@RenderBody()
			</section>
			@if (DodgeDynasty.Shared.Utilities.IsUserLoggedIn())
			{
				/* User Turn Dialog */
				<div id="userTurnDialog" class="center hide-yo-kids" title="Your Turn">
					<p>You are up!</p>

					<p class="ut-last-pick"></p>
					<div class="page-section note-text">
						<input id="chkHideUserTurn" class="vert-middle" type="checkbox" /><span class="note-text vert-middle">(Never show this dialog again)</span>
					</div>
				</div>

				@Html.Partial(DodgeDynasty.Shared.Constants.Views.DraftChatPartial)
				@Html.Partial(DodgeDynasty.Shared.Constants.Views.DialogsPartial)
			}
		</div>
		<footer>
			<div class="content-wrapper">
				<div class="float-left">
					<p ondblclick="javascript:$('<a target=\'_new\' href=\'https://www.espn.com/nfl/recap?gameId=231214018\'/>')[0].click();" >&copy; @DateTime.Now.Year - @(isStartDrafting ? "startdrafting.com" : "Dodge Dynasty League")</p>
				</div>
			</div>
		</footer>
	</div>
	<script type="text/javascript">
		var baseURL = '@Url.Content("~")';
		var webSocketsKillSwitch = @webSocketsKillSwitch;
		var draftChatKillSwitch = @draftChatKillSwitch;
		var audioKillSwitch = @audioKillSwitch;
		var textToVoiceKillSwitch = @textToVoiceKillSwitch;
		var userEditAudioKillSwitch = @userEditAudioKillSwitch;
		var defaultRefreshTimer = @System.Configuration.ConfigurationManager.AppSettings[DodgeDynasty.Shared.Constants.AppSettings.RefreshTimer];
		var fastRefreshTimer = @System.Configuration.ConfigurationManager.AppSettings[DodgeDynasty.Shared.Constants.AppSettings.FastRefreshTimer];
		var refreshTimer = webSocketsKillSwitch ? fastRefreshTimer : defaultRefreshTimer;
		var draftHistoryId = '@DodgeDynasty.Shared.Utilities.GetRouteDraftId(Url.RequestContext.RouteData)';
		var contentImagesPath = '@Url.Content("~/Content/images/")';
	</script>
	@RenderSection("scripts", required: false)
</body>
</html>
