@model DodgeDynasty.Models.PlayerRankModel

<div id="highlightQueueInnerPartial">
	<div class="hq-header-section">
		<label class="ba-header hq-header">@Model.CurrentDraftHighlight.QueueName</label>
		<input id="btnHQOptions" type="button" value="..." /></span>
		@Html.HiddenFor(m => m.CurrentDraft.LeagueName, new { @class = "hq-league-name" })
	</div>
	<div class="hq-display" data-draft-hq-id="@Model.CurrentDraftHighlight.DraftHighlightId">
		<div class="hq-empty-msg">
			<p class="hq-inner-empty-msg">
				Your Queue is empty.
				<span class="pr-empty-edit-msg">
					<br /><br />(First: Click '<a href="#" class="pr-empty-edit-link">Unlock Highlighter</a>'
					<br />to allow Highlight Editing)
				</span>
				<br /><br />Click on players to Highlight & add them to your Queue!
				<br /><br />Once in the Queue, to re-sort players just Drag & Drop them.
				<br /><br />
				@{var lastHighlightsDrafts = Model.GetLastDraftHighlights();}
				@if (lastHighlightsDrafts != null && lastHighlightsDrafts.Count > 0)
				{
					<div class="hq-view-spacer"></div>
					foreach (var lastHighlightsDraft in lastHighlightsDrafts)
					{
						<br />
						<span class="hq-copy-text">
							&lt;<a href="#" class="hq-copy-last-draft" data-hq-dh-id="@lastHighlightsDraft.DraftHighlightId"
								>Copy @(string.IsNullOrEmpty(lastHighlightsDraft.QueueName) ? lastHighlightsDraft.LeagueName : lastHighlightsDraft.QueueName)
								@(lastHighlightsDraft.QueueName != null && lastHighlightsDraft.QueueName.ToLower().Trim().EndsWith("queue") ? "" : "queue")</a>&gt;
						</span>
					}
				}
			</p>
		</div>
		<table class="ba-table queue-table " data-link="ExpandQueue">
			<tbody>
				<tr class="unsortable">
					<th style="">#</th>
					<th>Rk</th>
					<th class="hq-player-th">Player</th>
					@if (Model.AreYearByeWeeksFound())
					{
						<th>Tm<span class="ba-bye-week"> (Bye)</span></th>
					}
					else
					{
						<th>Tm</th>
					}
					<th>Pos</th>
				</tr>
				@{int hpCnt = 1;}
				@foreach (var player in Model.HighlightedPlayers)
				{
					<tr class="highlighted @player.HighlightClass @(player.PickNum != null ? ("ba-selected " + player.CssClass + ((Model.IsLoggedInUser(player.UserId) ? " you " : " "))) : "")" data-player-id="@player.PlayerId">
						<td class="hq-rank-num" data-rank-num="@hpCnt">@(hpCnt++)</td><td>@(player.RankNum != null ? player.RankNum.ToString() : "---")</td>
						<td class="ba-player-name" data-player-id="@player.PlayerId">
							@if (Model.IsDraftActive() && Model.IsUserTurn() && player.PickNum == null)
							{
								<span class="pr-name-span anchor player-link">@player.PlayerName</span>
							}
							else
							{
								<span class="pr-name-span">@player.PlayerName</span>
							}
						</td>
						@if (player.PickNum != null)
						{
							<td colspan="2">(@player.NickName, #@player.PickNum)</td>
						}
						else
						{
							if (Model.AreYearByeWeeksFound())
							{
								var byeWeek = Model.GetNFLTeamByeWeek(player.NFLTeam);
								if (byeWeek != null)
								{
									<td class="pr-team nowrap">@player.NFLTeamDisplay<span class="ba-bye-week"> (@byeWeek)</span></td>
								}
								else
								{
									<td class="pr-team nowrap">@player.NFLTeamDisplay</td>
								}
							}
							else
							{
								<td class="pr-team nowrap">@player.NFLTeamDisplay</td>
							}
							<td class="pr-pos">@player.Position</td>
						}
					</tr>
				}
				<tr class="unsortable">
					<td colspan="5" class="expand">
						<a href="#" id="ExpandQueue" class="expand-link" data-expand="@Model.Options.ExpandQueue.ToString().ToLower()">More...</a>
					</td>
				</tr>
			</tbody>
		</table>
		@{var currentHighlightsDrafts = Model.GetCurrentDraftOtherHighlights();}
		@if (currentHighlightsDrafts != null && currentHighlightsDrafts.Count > 0)
		{
		<div class="hq-current-dhs">
			<div class="hq-view-spacer"></div>
			@foreach (var currentHighlightsDraft in currentHighlightsDrafts)
			{
			<div class="hq-copy-text">
				&lt;<a href="#" class="hq-view-current-dh" data-hq-dh-id="@currentHighlightsDraft.DraftHighlightId"
					>View @(string.IsNullOrEmpty(currentHighlightsDraft.QueueName) ? currentHighlightsDraft.LeagueName : currentHighlightsDraft.QueueName)
					@(currentHighlightsDraft.QueueName != null && currentHighlightsDraft.QueueName.ToLower().Trim().EndsWith("queue") ? "" : "queue")</a>&gt;
			</div>
			}
		</div>
		}

		<div class="hq-delete-span">
			&lt;<a href="#" class="hq-delete-all">Delete Highlighting</a>&gt;
			<div id="hqConfirmDelete" class="center hide-yo-kids" title="Delete Highlighting">
				<p>WARNING!</p>
				<p>This will delete this queue's Player Highlights, and CANNOT be undone.</p>
			</div>
		</div>
	</div>
</div>