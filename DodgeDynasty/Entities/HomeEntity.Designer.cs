//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HomeModel", "FK_PlayerRank_Rank", "Rank", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.Rank), "PlayerRank", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.PlayerRank), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_UserRole_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.Role), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.UserRole), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_UserRole_UserRole", "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.UserRole), "UserRole1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DodgeDynasty.Entities.UserRole), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_UserRole_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.User), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.UserRole), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_LeagueOwner_CssColor", "CssColor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DodgeDynasty.Entities.CssColor), "LeagueOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.LeagueOwner), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_LeagueOwner_League", "League", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.League), "LeagueOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.LeagueOwner), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_Message_League", "League", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DodgeDynasty.Entities.League), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.Message), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_Message_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.User), "Message", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.Message), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_DraftChat_League", "League", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.League), "DraftChat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.DraftChat), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_DraftChat_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.User), "DraftChat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.DraftChat), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_DraftOwner_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.User), "DraftOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.DraftOwner), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_DraftPick_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.User), "DraftPick", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.DraftPick), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_DraftRank_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DodgeDynasty.Entities.User), "DraftRank", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.DraftRank), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_LeagueOwner_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.User), "LeagueOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.LeagueOwner), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_Draft_League", "League", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.League), "Draft", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.Draft), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_Draft_RunnerUp", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DodgeDynasty.Entities.User), "Draft", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.Draft), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_Draft_Winner", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DodgeDynasty.Entities.User), "Draft", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.Draft), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_DraftChat_Draft", "Draft", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.Draft), "DraftChat", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.DraftChat), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_DraftOwner_Draft", "Draft", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.Draft), "DraftOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.DraftOwner), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_DraftPick_Draft", "Draft", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.Draft), "DraftPick", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.DraftPick), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_DraftRank_Draft", "Draft", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DodgeDynasty.Entities.Draft), "DraftRank", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.DraftRank), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_PlayerAdjustment_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DodgeDynasty.Entities.User), "PlayerAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.PlayerAdjustment), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_DraftPick_Player", "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DodgeDynasty.Entities.Player), "DraftPick", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.DraftPick), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_Player_NFLTeam", "NFLTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.NFLTeam), "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.Player), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_Player_Player", "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.Player), "Player1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DodgeDynasty.Entities.Player), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_PlayerAdjustment_PlayerNew", "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DodgeDynasty.Entities.Player), "PlayerAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.PlayerAdjustment), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_PlayerAdjustment_PlayerOld", "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DodgeDynasty.Entities.Player), "PlayerAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.PlayerAdjustment), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_PlayerRank_Player", "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.Player), "PlayerRank", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.PlayerRank), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_ByeWeek_NFLTeam", "NFLTeam", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.NFLTeam), "ByeWeek", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.ByeWeek), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_PlayerHighlight_Draft", "Draft", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.Draft), "PlayerHighlight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.PlayerHighlight), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_PlayerHighlight_Highlight", "Highlight", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.Highlight), "PlayerHighlight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.PlayerHighlight), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_PlayerHighlight_Player", "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.Player), "PlayerHighlight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.PlayerHighlight), true)]
[assembly: EdmRelationshipAttribute("HomeModel", "FK_PlayerHighlight_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DodgeDynasty.Entities.User), "PlayerHighlight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DodgeDynasty.Entities.PlayerHighlight), true)]

#endregion

namespace DodgeDynasty.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HomeEntity : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HomeEntity object using the connection string found in the 'HomeEntity' section of the application configuration file.
        /// </summary>
        public HomeEntity() : base("name=HomeEntity", "HomeEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HomeEntity object.
        /// </summary>
        public HomeEntity(string connectionString) : base(connectionString, "HomeEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HomeEntity object.
        /// </summary>
        public HomeEntity(EntityConnection connection) : base(connection, "HomeEntity")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NFLTeam> NFLTeams
        {
            get
            {
                if ((_NFLTeams == null))
                {
                    _NFLTeams = base.CreateObjectSet<NFLTeam>("NFLTeams");
                }
                return _NFLTeams;
            }
        }
        private ObjectSet<NFLTeam> _NFLTeams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayerRank> PlayerRanks
        {
            get
            {
                if ((_PlayerRanks == null))
                {
                    _PlayerRanks = base.CreateObjectSet<PlayerRank>("PlayerRanks");
                }
                return _PlayerRanks;
            }
        }
        private ObjectSet<PlayerRank> _PlayerRanks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayerRankHistory> PlayerRankHistories
        {
            get
            {
                if ((_PlayerRankHistories == null))
                {
                    _PlayerRankHistories = base.CreateObjectSet<PlayerRankHistory>("PlayerRankHistories");
                }
                return _PlayerRankHistories;
            }
        }
        private ObjectSet<PlayerRankHistory> _PlayerRankHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Position> Positions
        {
            get
            {
                if ((_Positions == null))
                {
                    _Positions = base.CreateObjectSet<Position>("Positions");
                }
                return _Positions;
            }
        }
        private ObjectSet<Position> _Positions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Rank> Ranks
        {
            get
            {
                if ((_Ranks == null))
                {
                    _Ranks = base.CreateObjectSet<Rank>("Ranks");
                }
                return _Ranks;
            }
        }
        private ObjectSet<Rank> _Ranks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserApplicant> UserApplicants
        {
            get
            {
                if ((_UserApplicants == null))
                {
                    _UserApplicants = base.CreateObjectSet<UserApplicant>("UserApplicants");
                }
                return _UserApplicants;
            }
        }
        private ObjectSet<UserApplicant> _UserApplicants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserProfile> UserProfiles
        {
            get
            {
                if ((_UserProfiles == null))
                {
                    _UserProfiles = base.CreateObjectSet<UserProfile>("UserProfiles");
                }
                return _UserProfiles;
            }
        }
        private ObjectSet<UserProfile> _UserProfiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRoles
        {
            get
            {
                if ((_UserRoles == null))
                {
                    _UserRoles = base.CreateObjectSet<UserRole>("UserRoles");
                }
                return _UserRoles;
            }
        }
        private ObjectSet<UserRole> _UserRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DraftRank> DraftRanks
        {
            get
            {
                if ((_DraftRanks == null))
                {
                    _DraftRanks = base.CreateObjectSet<DraftRank>("DraftRanks");
                }
                return _DraftRanks;
            }
        }
        private ObjectSet<DraftRank> _DraftRanks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DraftOwner> DraftOwners
        {
            get
            {
                if ((_DraftOwners == null))
                {
                    _DraftOwners = base.CreateObjectSet<DraftOwner>("DraftOwners");
                }
                return _DraftOwners;
            }
        }
        private ObjectSet<DraftOwner> _DraftOwners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DraftPick> DraftPicks
        {
            get
            {
                if ((_DraftPicks == null))
                {
                    _DraftPicks = base.CreateObjectSet<DraftPick>("DraftPicks");
                }
                return _DraftPicks;
            }
        }
        private ObjectSet<DraftPick> _DraftPicks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CssColor> CssColors
        {
            get
            {
                if ((_CssColors == null))
                {
                    _CssColors = base.CreateObjectSet<CssColor>("CssColors");
                }
                return _CssColors;
            }
        }
        private ObjectSet<CssColor> _CssColors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<League> Leagues
        {
            get
            {
                if ((_Leagues == null))
                {
                    _Leagues = base.CreateObjectSet<League>("Leagues");
                }
                return _Leagues;
            }
        }
        private ObjectSet<League> _Leagues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LeagueOwner> LeagueOwners
        {
            get
            {
                if ((_LeagueOwners == null))
                {
                    _LeagueOwners = base.CreateObjectSet<LeagueOwner>("LeagueOwners");
                }
                return _LeagueOwners;
            }
        }
        private ObjectSet<LeagueOwner> _LeagueOwners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Message> Messages
        {
            get
            {
                if ((_Messages == null))
                {
                    _Messages = base.CreateObjectSet<Message>("Messages");
                }
                return _Messages;
            }
        }
        private ObjectSet<Message> _Messages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DraftChat> DraftChats
        {
            get
            {
                if ((_DraftChats == null))
                {
                    _DraftChats = base.CreateObjectSet<DraftChat>("DraftChats");
                }
                return _DraftChats;
            }
        }
        private ObjectSet<DraftChat> _DraftChats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Draft> Drafts
        {
            get
            {
                if ((_Drafts == null))
                {
                    _Drafts = base.CreateObjectSet<Draft>("Drafts");
                }
                return _Drafts;
            }
        }
        private ObjectSet<Draft> _Drafts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayerAdjustment> PlayerAdjustments
        {
            get
            {
                if ((_PlayerAdjustments == null))
                {
                    _PlayerAdjustments = base.CreateObjectSet<PlayerAdjustment>("PlayerAdjustments");
                }
                return _PlayerAdjustments;
            }
        }
        private ObjectSet<PlayerAdjustment> _PlayerAdjustments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Player> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Player>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Player> _Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ByeWeek> ByeWeeks
        {
            get
            {
                if ((_ByeWeeks == null))
                {
                    _ByeWeeks = base.CreateObjectSet<ByeWeek>("ByeWeeks");
                }
                return _ByeWeeks;
            }
        }
        private ObjectSet<ByeWeek> _ByeWeeks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Highlight> Highlights
        {
            get
            {
                if ((_Highlights == null))
                {
                    _Highlights = base.CreateObjectSet<Highlight>("Highlights");
                }
                return _Highlights;
            }
        }
        private ObjectSet<Highlight> _Highlights;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DraftPickHistory> DraftPickHistories
        {
            get
            {
                if ((_DraftPickHistories == null))
                {
                    _DraftPickHistories = base.CreateObjectSet<DraftPickHistory>("DraftPickHistories");
                }
                return _DraftPickHistories;
            }
        }
        private ObjectSet<DraftPickHistory> _DraftPickHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayerHighlight> PlayerHighlights
        {
            get
            {
                if ((_PlayerHighlights == null))
                {
                    _PlayerHighlights = base.CreateObjectSet<PlayerHighlight>("PlayerHighlights");
                }
                return _PlayerHighlights;
            }
        }
        private ObjectSet<PlayerHighlight> _PlayerHighlights;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PlayerRankOption> PlayerRankOptions
        {
            get
            {
                if ((_PlayerRankOptions == null))
                {
                    _PlayerRankOptions = base.CreateObjectSet<PlayerRankOption>("PlayerRankOptions");
                }
                return _PlayerRankOptions;
            }
        }
        private ObjectSet<PlayerRankOption> _PlayerRankOptions;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NFLTeams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNFLTeams(NFLTeam nFLTeam)
        {
            base.AddObject("NFLTeams", nFLTeam);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayerRanks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayerRanks(PlayerRank playerRank)
        {
            base.AddObject("PlayerRanks", playerRank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayerRankHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayerRankHistories(PlayerRankHistory playerRankHistory)
        {
            base.AddObject("PlayerRankHistories", playerRankHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Positions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPositions(Position position)
        {
            base.AddObject("Positions", position);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ranks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRanks(Rank rank)
        {
            base.AddObject("Ranks", rank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserApplicants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserApplicants(UserApplicant userApplicant)
        {
            base.AddObject("UserApplicants", userApplicant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserProfiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserProfiles(UserProfile userProfile)
        {
            base.AddObject("UserProfiles", userProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRoles(UserRole userRole)
        {
            base.AddObject("UserRoles", userRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DraftRanks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDraftRanks(DraftRank draftRank)
        {
            base.AddObject("DraftRanks", draftRank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DraftOwners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDraftOwners(DraftOwner draftOwner)
        {
            base.AddObject("DraftOwners", draftOwner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DraftPicks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDraftPicks(DraftPick draftPick)
        {
            base.AddObject("DraftPicks", draftPick);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CssColors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCssColors(CssColor cssColor)
        {
            base.AddObject("CssColors", cssColor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Leagues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeagues(League league)
        {
            base.AddObject("Leagues", league);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LeagueOwners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLeagueOwners(LeagueOwner leagueOwner)
        {
            base.AddObject("LeagueOwners", leagueOwner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Messages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessages(Message message)
        {
            base.AddObject("Messages", message);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DraftChats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDraftChats(DraftChat draftChat)
        {
            base.AddObject("DraftChats", draftChat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Drafts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrafts(Draft draft)
        {
            base.AddObject("Drafts", draft);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayerAdjustments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayerAdjustments(PlayerAdjustment playerAdjustment)
        {
            base.AddObject("PlayerAdjustments", playerAdjustment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayers(Player player)
        {
            base.AddObject("Players", player);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ByeWeeks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToByeWeeks(ByeWeek byeWeek)
        {
            base.AddObject("ByeWeeks", byeWeek);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Highlights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHighlights(Highlight highlight)
        {
            base.AddObject("Highlights", highlight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DraftPickHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDraftPickHistories(DraftPickHistory draftPickHistory)
        {
            base.AddObject("DraftPickHistories", draftPickHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayerHighlights EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayerHighlights(PlayerHighlight playerHighlight)
        {
            base.AddObject("PlayerHighlights", playerHighlight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PlayerRankOptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayerRankOptions(PlayerRankOption playerRankOption)
        {
            base.AddObject("PlayerRankOptions", playerRankOption);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="ByeWeek")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ByeWeek : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ByeWeek object.
        /// </summary>
        /// <param name="byeWeekId">Initial value of the ByeWeekId property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="nFLTeam">Initial value of the NFLTeam property.</param>
        /// <param name="weekNum">Initial value of the WeekNum property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static ByeWeek CreateByeWeek(global::System.Int32 byeWeekId, global::System.Int16 year, global::System.String nFLTeam, global::System.Int16 weekNum, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp)
        {
            ByeWeek byeWeek = new ByeWeek();
            byeWeek.ByeWeekId = byeWeekId;
            byeWeek.Year = year;
            byeWeek.NFLTeam = nFLTeam;
            byeWeek.WeekNum = weekNum;
            byeWeek.AddTimestamp = addTimestamp;
            byeWeek.LastUpdateTimestamp = lastUpdateTimestamp;
            return byeWeek;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ByeWeekId
        {
            get
            {
                return _ByeWeekId;
            }
            set
            {
                if (_ByeWeekId != value)
                {
                    OnByeWeekIdChanging(value);
                    ReportPropertyChanging("ByeWeekId");
                    _ByeWeekId = StructuralObject.SetValidValue(value, "ByeWeekId");
                    ReportPropertyChanged("ByeWeekId");
                    OnByeWeekIdChanged();
                }
            }
        }
        private global::System.Int32 _ByeWeekId;
        partial void OnByeWeekIdChanging(global::System.Int32 value);
        partial void OnByeWeekIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, "Year");
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int16 _Year;
        partial void OnYearChanging(global::System.Int16 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NFLTeam
        {
            get
            {
                return _NFLTeam;
            }
            set
            {
                OnNFLTeamChanging(value);
                ReportPropertyChanging("NFLTeam");
                _NFLTeam = StructuralObject.SetValidValue(value, false, "NFLTeam");
                ReportPropertyChanged("NFLTeam");
                OnNFLTeamChanged();
            }
        }
        private global::System.String _NFLTeam;
        partial void OnNFLTeamChanging(global::System.String value);
        partial void OnNFLTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 WeekNum
        {
            get
            {
                return _WeekNum;
            }
            set
            {
                OnWeekNumChanging(value);
                ReportPropertyChanging("WeekNum");
                _WeekNum = StructuralObject.SetValidValue(value, "WeekNum");
                ReportPropertyChanged("WeekNum");
                OnWeekNumChanged();
            }
        }
        private global::System.Int16 _WeekNum;
        partial void OnWeekNumChanging(global::System.Int16 value);
        partial void OnWeekNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_ByeWeek_NFLTeam", "NFLTeam")]
        public NFLTeam NFLTeam1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NFLTeam>("HomeModel.FK_ByeWeek_NFLTeam", "NFLTeam").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NFLTeam>("HomeModel.FK_ByeWeek_NFLTeam", "NFLTeam").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NFLTeam> NFLTeam1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NFLTeam>("HomeModel.FK_ByeWeek_NFLTeam", "NFLTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NFLTeam>("HomeModel.FK_ByeWeek_NFLTeam", "NFLTeam", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="CssColor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CssColor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CssColor object.
        /// </summary>
        /// <param name="className">Initial value of the ClassName property.</param>
        /// <param name="colorText">Initial value of the ColorText property.</param>
        /// <param name="colorValue">Initial value of the ColorValue property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static CssColor CreateCssColor(global::System.String className, global::System.String colorText, global::System.String colorValue, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp)
        {
            CssColor cssColor = new CssColor();
            cssColor.ClassName = className;
            cssColor.ColorText = colorText;
            cssColor.ColorValue = colorValue;
            cssColor.AddTimestamp = addTimestamp;
            cssColor.LastUpdateTimestamp = lastUpdateTimestamp;
            return cssColor;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassName
        {
            get
            {
                return _ClassName;
            }
            set
            {
                if (_ClassName != value)
                {
                    OnClassNameChanging(value);
                    ReportPropertyChanging("ClassName");
                    _ClassName = StructuralObject.SetValidValue(value, false, "ClassName");
                    ReportPropertyChanged("ClassName");
                    OnClassNameChanged();
                }
            }
        }
        private global::System.String _ClassName;
        partial void OnClassNameChanging(global::System.String value);
        partial void OnClassNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ColorText
        {
            get
            {
                return _ColorText;
            }
            set
            {
                OnColorTextChanging(value);
                ReportPropertyChanging("ColorText");
                _ColorText = StructuralObject.SetValidValue(value, false, "ColorText");
                ReportPropertyChanged("ColorText");
                OnColorTextChanged();
            }
        }
        private global::System.String _ColorText;
        partial void OnColorTextChanging(global::System.String value);
        partial void OnColorTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ColorValue
        {
            get
            {
                return _ColorValue;
            }
            set
            {
                OnColorValueChanging(value);
                ReportPropertyChanging("ColorValue");
                _ColorValue = StructuralObject.SetValidValue(value, false, "ColorValue");
                ReportPropertyChanged("ColorValue");
                OnColorValueChanged();
            }
        }
        private global::System.String _ColorValue;
        partial void OnColorValueChanging(global::System.String value);
        partial void OnColorValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_LeagueOwner_CssColor", "LeagueOwner")]
        public EntityCollection<LeagueOwner> LeagueOwners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeagueOwner>("HomeModel.FK_LeagueOwner_CssColor", "LeagueOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeagueOwner>("HomeModel.FK_LeagueOwner_CssColor", "LeagueOwner", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="Draft")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Draft : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Draft object.
        /// </summary>
        /// <param name="draftId">Initial value of the DraftId property.</param>
        /// <param name="leagueId">Initial value of the LeagueId property.</param>
        /// <param name="draftDate">Initial value of the DraftDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isComplete">Initial value of the IsComplete property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static Draft CreateDraft(global::System.Int32 draftId, global::System.Int32 leagueId, global::System.DateTime draftDate, global::System.Boolean isActive, global::System.Boolean isComplete, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp)
        {
            Draft draft = new Draft();
            draft.DraftId = draftId;
            draft.LeagueId = leagueId;
            draft.DraftDate = draftDate;
            draft.IsActive = isActive;
            draft.IsComplete = isComplete;
            draft.AddTimestamp = addTimestamp;
            draft.LastUpdateTimestamp = lastUpdateTimestamp;
            return draft;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DraftId
        {
            get
            {
                return _DraftId;
            }
            set
            {
                if (_DraftId != value)
                {
                    OnDraftIdChanging(value);
                    ReportPropertyChanging("DraftId");
                    _DraftId = StructuralObject.SetValidValue(value, "DraftId");
                    ReportPropertyChanged("DraftId");
                    OnDraftIdChanged();
                }
            }
        }
        private global::System.Int32 _DraftId;
        partial void OnDraftIdChanging(global::System.Int32 value);
        partial void OnDraftIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueId
        {
            get
            {
                return _LeagueId;
            }
            set
            {
                OnLeagueIdChanging(value);
                ReportPropertyChanging("LeagueId");
                _LeagueId = StructuralObject.SetValidValue(value, "LeagueId");
                ReportPropertyChanged("LeagueId");
                OnLeagueIdChanged();
            }
        }
        private global::System.Int32 _LeagueId;
        partial void OnLeagueIdChanging(global::System.Int32 value);
        partial void OnLeagueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeagueName
        {
            get
            {
                return _LeagueName;
            }
            set
            {
                OnLeagueNameChanging(value);
                ReportPropertyChanging("LeagueName");
                _LeagueName = StructuralObject.SetValidValue(value, true, "LeagueName");
                ReportPropertyChanged("LeagueName");
                OnLeagueNameChanged();
            }
        }
        private global::System.String _LeagueName;
        partial void OnLeagueNameChanging(global::System.String value);
        partial void OnLeagueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DraftDate
        {
            get
            {
                return _DraftDate;
            }
            set
            {
                OnDraftDateChanging(value);
                ReportPropertyChanging("DraftDate");
                _DraftDate = StructuralObject.SetValidValue(value, "DraftDate");
                ReportPropertyChanged("DraftDate");
                OnDraftDateChanged();
            }
        }
        private global::System.DateTime _DraftDate;
        partial void OnDraftDateChanging(global::System.DateTime value);
        partial void OnDraftDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DraftLocation
        {
            get
            {
                return _DraftLocation;
            }
            set
            {
                OnDraftLocationChanging(value);
                ReportPropertyChanging("DraftLocation");
                _DraftLocation = StructuralObject.SetValidValue(value, true, "DraftLocation");
                ReportPropertyChanged("DraftLocation");
                OnDraftLocationChanged();
            }
        }
        private global::System.String _DraftLocation;
        partial void OnDraftLocationChanging(global::System.String value);
        partial void OnDraftLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> DraftYear
        {
            get
            {
                return _DraftYear;
            }
            set
            {
                OnDraftYearChanging(value);
                ReportPropertyChanging("DraftYear");
                _DraftYear = StructuralObject.SetValidValue(value, "DraftYear");
                ReportPropertyChanged("DraftYear");
                OnDraftYearChanged();
            }
        }
        private Nullable<global::System.Int16> _DraftYear;
        partial void OnDraftYearChanging(Nullable<global::System.Int16> value);
        partial void OnDraftYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> NumOwners
        {
            get
            {
                return _NumOwners;
            }
            set
            {
                OnNumOwnersChanging(value);
                ReportPropertyChanging("NumOwners");
                _NumOwners = StructuralObject.SetValidValue(value, "NumOwners");
                ReportPropertyChanged("NumOwners");
                OnNumOwnersChanged();
            }
        }
        private Nullable<global::System.Int16> _NumOwners;
        partial void OnNumOwnersChanging(Nullable<global::System.Int16> value);
        partial void OnNumOwnersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> NumRounds
        {
            get
            {
                return _NumRounds;
            }
            set
            {
                OnNumRoundsChanging(value);
                ReportPropertyChanging("NumRounds");
                _NumRounds = StructuralObject.SetValidValue(value, "NumRounds");
                ReportPropertyChanged("NumRounds");
                OnNumRoundsChanged();
            }
        }
        private Nullable<global::System.Int16> _NumRounds;
        partial void OnNumRoundsChanging(Nullable<global::System.Int16> value);
        partial void OnNumRoundsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> NumKeepers
        {
            get
            {
                return _NumKeepers;
            }
            set
            {
                OnNumKeepersChanging(value);
                ReportPropertyChanging("NumKeepers");
                _NumKeepers = StructuralObject.SetValidValue(value, "NumKeepers");
                ReportPropertyChanged("NumKeepers");
                OnNumKeepersChanged();
            }
        }
        private Nullable<global::System.Int16> _NumKeepers;
        partial void OnNumKeepersChanging(Nullable<global::System.Int16> value);
        partial void OnNumKeepersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Format
        {
            get
            {
                return _Format;
            }
            set
            {
                OnFormatChanging(value);
                ReportPropertyChanging("Format");
                _Format = StructuralObject.SetValidValue(value, true, "Format");
                ReportPropertyChanged("Format");
                OnFormatChanged();
            }
        }
        private global::System.String _Format;
        partial void OnFormatChanging(global::System.String value);
        partial void OnFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsComplete
        {
            get
            {
                return _IsComplete;
            }
            set
            {
                OnIsCompleteChanging(value);
                ReportPropertyChanging("IsComplete");
                _IsComplete = StructuralObject.SetValidValue(value, "IsComplete");
                ReportPropertyChanged("IsComplete");
                OnIsCompleteChanged();
            }
        }
        private global::System.Boolean _IsComplete;
        partial void OnIsCompleteChanging(global::System.Boolean value);
        partial void OnIsCompleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> WinnerId
        {
            get
            {
                return _WinnerId;
            }
            set
            {
                OnWinnerIdChanging(value);
                ReportPropertyChanging("WinnerId");
                _WinnerId = StructuralObject.SetValidValue(value, "WinnerId");
                ReportPropertyChanged("WinnerId");
                OnWinnerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _WinnerId;
        partial void OnWinnerIdChanging(Nullable<global::System.Int32> value);
        partial void OnWinnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RunnerUpId
        {
            get
            {
                return _RunnerUpId;
            }
            set
            {
                OnRunnerUpIdChanging(value);
                ReportPropertyChanging("RunnerUpId");
                _RunnerUpId = StructuralObject.SetValidValue(value, "RunnerUpId");
                ReportPropertyChanged("RunnerUpId");
                OnRunnerUpIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RunnerUpId;
        partial void OnRunnerUpIdChanging(Nullable<global::System.Int32> value);
        partial void OnRunnerUpIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HasCoWinners
        {
            get
            {
                return _HasCoWinners;
            }
            set
            {
                OnHasCoWinnersChanging(value);
                ReportPropertyChanging("HasCoWinners");
                _HasCoWinners = StructuralObject.SetValidValue(value, "HasCoWinners");
                ReportPropertyChanged("HasCoWinners");
                OnHasCoWinnersChanged();
            }
        }
        private Nullable<global::System.Boolean> _HasCoWinners;
        partial void OnHasCoWinnersChanging(Nullable<global::System.Boolean> value);
        partial void OnHasCoWinnersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Draft_League", "League")]
        public League League
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("HomeModel.FK_Draft_League", "League").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("HomeModel.FK_Draft_League", "League").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<League> LeagueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("HomeModel.FK_Draft_League", "League");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<League>("HomeModel.FK_Draft_League", "League", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Draft_RunnerUp", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_Draft_RunnerUp", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_Draft_RunnerUp", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_Draft_RunnerUp", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HomeModel.FK_Draft_RunnerUp", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Draft_Winner", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_Draft_Winner", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_Draft_Winner", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_Draft_Winner", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HomeModel.FK_Draft_Winner", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftChat_Draft", "DraftChat")]
        public EntityCollection<DraftChat> DraftChats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DraftChat>("HomeModel.FK_DraftChat_Draft", "DraftChat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DraftChat>("HomeModel.FK_DraftChat_Draft", "DraftChat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftOwner_Draft", "DraftOwner")]
        public EntityCollection<DraftOwner> DraftOwners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DraftOwner>("HomeModel.FK_DraftOwner_Draft", "DraftOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DraftOwner>("HomeModel.FK_DraftOwner_Draft", "DraftOwner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftPick_Draft", "DraftPick")]
        public EntityCollection<DraftPick> DraftPicks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DraftPick>("HomeModel.FK_DraftPick_Draft", "DraftPick");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DraftPick>("HomeModel.FK_DraftPick_Draft", "DraftPick", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftRank_Draft", "DraftRank")]
        public EntityCollection<DraftRank> DraftRanks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DraftRank>("HomeModel.FK_DraftRank_Draft", "DraftRank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DraftRank>("HomeModel.FK_DraftRank_Draft", "DraftRank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerHighlight_Draft", "PlayerHighlight")]
        public EntityCollection<PlayerHighlight> PlayerHighlights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerHighlight>("HomeModel.FK_PlayerHighlight_Draft", "PlayerHighlight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerHighlight>("HomeModel.FK_PlayerHighlight_Draft", "PlayerHighlight", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="DraftChat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DraftChat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DraftChat object.
        /// </summary>
        /// <param name="draftChatId">Initial value of the DraftChatId property.</param>
        /// <param name="draftId">Initial value of the DraftId property.</param>
        /// <param name="leagueId">Initial value of the LeagueId property.</param>
        /// <param name="authorId">Initial value of the AuthorId property.</param>
        /// <param name="messageText">Initial value of the MessageText property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static DraftChat CreateDraftChat(global::System.Int32 draftChatId, global::System.Int32 draftId, global::System.Int32 leagueId, global::System.Int32 authorId, global::System.String messageText, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp)
        {
            DraftChat draftChat = new DraftChat();
            draftChat.DraftChatId = draftChatId;
            draftChat.DraftId = draftId;
            draftChat.LeagueId = leagueId;
            draftChat.AuthorId = authorId;
            draftChat.MessageText = messageText;
            draftChat.AddTimestamp = addTimestamp;
            draftChat.LastUpdateTimestamp = lastUpdateTimestamp;
            return draftChat;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DraftChatId
        {
            get
            {
                return _DraftChatId;
            }
            set
            {
                if (_DraftChatId != value)
                {
                    OnDraftChatIdChanging(value);
                    ReportPropertyChanging("DraftChatId");
                    _DraftChatId = StructuralObject.SetValidValue(value, "DraftChatId");
                    ReportPropertyChanged("DraftChatId");
                    OnDraftChatIdChanged();
                }
            }
        }
        private global::System.Int32 _DraftChatId;
        partial void OnDraftChatIdChanging(global::System.Int32 value);
        partial void OnDraftChatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DraftId
        {
            get
            {
                return _DraftId;
            }
            set
            {
                OnDraftIdChanging(value);
                ReportPropertyChanging("DraftId");
                _DraftId = StructuralObject.SetValidValue(value, "DraftId");
                ReportPropertyChanged("DraftId");
                OnDraftIdChanged();
            }
        }
        private global::System.Int32 _DraftId;
        partial void OnDraftIdChanging(global::System.Int32 value);
        partial void OnDraftIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueId
        {
            get
            {
                return _LeagueId;
            }
            set
            {
                OnLeagueIdChanging(value);
                ReportPropertyChanging("LeagueId");
                _LeagueId = StructuralObject.SetValidValue(value, "LeagueId");
                ReportPropertyChanged("LeagueId");
                OnLeagueIdChanged();
            }
        }
        private global::System.Int32 _LeagueId;
        partial void OnLeagueIdChanging(global::System.Int32 value);
        partial void OnLeagueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorId
        {
            get
            {
                return _AuthorId;
            }
            set
            {
                OnAuthorIdChanging(value);
                ReportPropertyChanging("AuthorId");
                _AuthorId = StructuralObject.SetValidValue(value, "AuthorId");
                ReportPropertyChanged("AuthorId");
                OnAuthorIdChanged();
            }
        }
        private global::System.Int32 _AuthorId;
        partial void OnAuthorIdChanging(global::System.Int32 value);
        partial void OnAuthorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, true, "NickName");
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageText
        {
            get
            {
                return _MessageText;
            }
            set
            {
                OnMessageTextChanging(value);
                ReportPropertyChanging("MessageText");
                _MessageText = StructuralObject.SetValidValue(value, false, "MessageText");
                ReportPropertyChanged("MessageText");
                OnMessageTextChanged();
            }
        }
        private global::System.String _MessageText;
        partial void OnMessageTextChanging(global::System.String value);
        partial void OnMessageTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftChat_League", "League")]
        public League League
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("HomeModel.FK_DraftChat_League", "League").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("HomeModel.FK_DraftChat_League", "League").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<League> LeagueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("HomeModel.FK_DraftChat_League", "League");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<League>("HomeModel.FK_DraftChat_League", "League", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftChat_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_DraftChat_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_DraftChat_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_DraftChat_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HomeModel.FK_DraftChat_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftChat_Draft", "Draft")]
        public Draft Draft
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_DraftChat_Draft", "Draft").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_DraftChat_Draft", "Draft").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Draft> DraftReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_DraftChat_Draft", "Draft");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Draft>("HomeModel.FK_DraftChat_Draft", "Draft", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="DraftOwner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DraftOwner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DraftOwner object.
        /// </summary>
        /// <param name="draftOwnerId">Initial value of the DraftOwnerId property.</param>
        /// <param name="draftId">Initial value of the DraftId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static DraftOwner CreateDraftOwner(global::System.Int32 draftOwnerId, global::System.Int32 draftId, global::System.Int32 userId)
        {
            DraftOwner draftOwner = new DraftOwner();
            draftOwner.DraftOwnerId = draftOwnerId;
            draftOwner.DraftId = draftId;
            draftOwner.UserId = userId;
            return draftOwner;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DraftOwnerId
        {
            get
            {
                return _DraftOwnerId;
            }
            set
            {
                if (_DraftOwnerId != value)
                {
                    OnDraftOwnerIdChanging(value);
                    ReportPropertyChanging("DraftOwnerId");
                    _DraftOwnerId = StructuralObject.SetValidValue(value, "DraftOwnerId");
                    ReportPropertyChanged("DraftOwnerId");
                    OnDraftOwnerIdChanged();
                }
            }
        }
        private global::System.Int32 _DraftOwnerId;
        partial void OnDraftOwnerIdChanging(global::System.Int32 value);
        partial void OnDraftOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DraftId
        {
            get
            {
                return _DraftId;
            }
            set
            {
                OnDraftIdChanging(value);
                ReportPropertyChanging("DraftId");
                _DraftId = StructuralObject.SetValidValue(value, "DraftId");
                ReportPropertyChanged("DraftId");
                OnDraftIdChanged();
            }
        }
        private global::System.Int32 _DraftId;
        partial void OnDraftIdChanging(global::System.Int32 value);
        partial void OnDraftIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddTimestamp;
        partial void OnAddTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftOwner_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_DraftOwner_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_DraftOwner_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_DraftOwner_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HomeModel.FK_DraftOwner_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftOwner_Draft", "Draft")]
        public Draft Draft
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_DraftOwner_Draft", "Draft").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_DraftOwner_Draft", "Draft").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Draft> DraftReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_DraftOwner_Draft", "Draft");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Draft>("HomeModel.FK_DraftOwner_Draft", "Draft", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="DraftPick")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DraftPick : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DraftPick object.
        /// </summary>
        /// <param name="draftPickId">Initial value of the DraftPickId property.</param>
        /// <param name="draftId">Initial value of the DraftId property.</param>
        /// <param name="pickNum">Initial value of the PickNum property.</param>
        /// <param name="roundNum">Initial value of the RoundNum property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static DraftPick CreateDraftPick(global::System.Int32 draftPickId, global::System.Int32 draftId, global::System.Int32 pickNum, global::System.Int32 roundNum, global::System.Int32 userId)
        {
            DraftPick draftPick = new DraftPick();
            draftPick.DraftPickId = draftPickId;
            draftPick.DraftId = draftId;
            draftPick.PickNum = pickNum;
            draftPick.RoundNum = roundNum;
            draftPick.UserId = userId;
            return draftPick;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DraftPickId
        {
            get
            {
                return _DraftPickId;
            }
            set
            {
                if (_DraftPickId != value)
                {
                    OnDraftPickIdChanging(value);
                    ReportPropertyChanging("DraftPickId");
                    _DraftPickId = StructuralObject.SetValidValue(value, "DraftPickId");
                    ReportPropertyChanged("DraftPickId");
                    OnDraftPickIdChanged();
                }
            }
        }
        private global::System.Int32 _DraftPickId;
        partial void OnDraftPickIdChanging(global::System.Int32 value);
        partial void OnDraftPickIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DraftId
        {
            get
            {
                return _DraftId;
            }
            set
            {
                OnDraftIdChanging(value);
                ReportPropertyChanging("DraftId");
                _DraftId = StructuralObject.SetValidValue(value, "DraftId");
                ReportPropertyChanged("DraftId");
                OnDraftIdChanged();
            }
        }
        private global::System.Int32 _DraftId;
        partial void OnDraftIdChanging(global::System.Int32 value);
        partial void OnDraftIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PickNum
        {
            get
            {
                return _PickNum;
            }
            set
            {
                OnPickNumChanging(value);
                ReportPropertyChanging("PickNum");
                _PickNum = StructuralObject.SetValidValue(value, "PickNum");
                ReportPropertyChanged("PickNum");
                OnPickNumChanged();
            }
        }
        private global::System.Int32 _PickNum;
        partial void OnPickNumChanging(global::System.Int32 value);
        partial void OnPickNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundNum
        {
            get
            {
                return _RoundNum;
            }
            set
            {
                OnRoundNumChanging(value);
                ReportPropertyChanging("RoundNum");
                _RoundNum = StructuralObject.SetValidValue(value, "RoundNum");
                ReportPropertyChanged("RoundNum");
                OnRoundNumChanged();
            }
        }
        private global::System.Int32 _RoundNum;
        partial void OnRoundNumChanging(global::System.Int32 value);
        partial void OnRoundNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                OnPlayerIdChanging(value);
                ReportPropertyChanging("PlayerId");
                _PlayerId = StructuralObject.SetValidValue(value, "PlayerId");
                ReportPropertyChanged("PlayerId");
                OnPlayerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PlayerId;
        partial void OnPlayerIdChanging(Nullable<global::System.Int32> value);
        partial void OnPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PickStartDateTime
        {
            get
            {
                return _PickStartDateTime;
            }
            set
            {
                OnPickStartDateTimeChanging(value);
                ReportPropertyChanging("PickStartDateTime");
                _PickStartDateTime = StructuralObject.SetValidValue(value, "PickStartDateTime");
                ReportPropertyChanged("PickStartDateTime");
                OnPickStartDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _PickStartDateTime;
        partial void OnPickStartDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnPickStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PickEndDateTime
        {
            get
            {
                return _PickEndDateTime;
            }
            set
            {
                OnPickEndDateTimeChanging(value);
                ReportPropertyChanging("PickEndDateTime");
                _PickEndDateTime = StructuralObject.SetValidValue(value, "PickEndDateTime");
                ReportPropertyChanged("PickEndDateTime");
                OnPickEndDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _PickEndDateTime;
        partial void OnPickEndDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnPickEndDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddTimestamp;
        partial void OnAddTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftPick_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_DraftPick_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_DraftPick_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_DraftPick_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HomeModel.FK_DraftPick_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftPick_Draft", "Draft")]
        public Draft Draft
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_DraftPick_Draft", "Draft").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_DraftPick_Draft", "Draft").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Draft> DraftReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_DraftPick_Draft", "Draft");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Draft>("HomeModel.FK_DraftPick_Draft", "Draft", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftPick_Player", "Player")]
        public Player Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_DraftPick_Player", "Player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_DraftPick_Player", "Player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> PlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_DraftPick_Player", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("HomeModel.FK_DraftPick_Player", "Player", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="DraftPickHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DraftPickHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DraftPickHistory object.
        /// </summary>
        /// <param name="draftPickHistoryId">Initial value of the DraftPickHistoryId property.</param>
        /// <param name="draftPickId">Initial value of the DraftPickId property.</param>
        /// <param name="draftId">Initial value of the DraftId property.</param>
        /// <param name="pickNum">Initial value of the PickNum property.</param>
        /// <param name="roundNum">Initial value of the RoundNum property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static DraftPickHistory CreateDraftPickHistory(global::System.Int32 draftPickHistoryId, global::System.Int32 draftPickId, global::System.Int32 draftId, global::System.Int32 pickNum, global::System.Int32 roundNum, global::System.Int32 userId, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp)
        {
            DraftPickHistory draftPickHistory = new DraftPickHistory();
            draftPickHistory.DraftPickHistoryId = draftPickHistoryId;
            draftPickHistory.DraftPickId = draftPickId;
            draftPickHistory.DraftId = draftId;
            draftPickHistory.PickNum = pickNum;
            draftPickHistory.RoundNum = roundNum;
            draftPickHistory.UserId = userId;
            draftPickHistory.AddTimestamp = addTimestamp;
            draftPickHistory.LastUpdateTimestamp = lastUpdateTimestamp;
            return draftPickHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DraftPickHistoryId
        {
            get
            {
                return _DraftPickHistoryId;
            }
            set
            {
                if (_DraftPickHistoryId != value)
                {
                    OnDraftPickHistoryIdChanging(value);
                    ReportPropertyChanging("DraftPickHistoryId");
                    _DraftPickHistoryId = StructuralObject.SetValidValue(value, "DraftPickHistoryId");
                    ReportPropertyChanged("DraftPickHistoryId");
                    OnDraftPickHistoryIdChanged();
                }
            }
        }
        private global::System.Int32 _DraftPickHistoryId;
        partial void OnDraftPickHistoryIdChanging(global::System.Int32 value);
        partial void OnDraftPickHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DraftPickId
        {
            get
            {
                return _DraftPickId;
            }
            set
            {
                OnDraftPickIdChanging(value);
                ReportPropertyChanging("DraftPickId");
                _DraftPickId = StructuralObject.SetValidValue(value, "DraftPickId");
                ReportPropertyChanged("DraftPickId");
                OnDraftPickIdChanged();
            }
        }
        private global::System.Int32 _DraftPickId;
        partial void OnDraftPickIdChanging(global::System.Int32 value);
        partial void OnDraftPickIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DraftId
        {
            get
            {
                return _DraftId;
            }
            set
            {
                OnDraftIdChanging(value);
                ReportPropertyChanging("DraftId");
                _DraftId = StructuralObject.SetValidValue(value, "DraftId");
                ReportPropertyChanged("DraftId");
                OnDraftIdChanged();
            }
        }
        private global::System.Int32 _DraftId;
        partial void OnDraftIdChanging(global::System.Int32 value);
        partial void OnDraftIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PickNum
        {
            get
            {
                return _PickNum;
            }
            set
            {
                OnPickNumChanging(value);
                ReportPropertyChanging("PickNum");
                _PickNum = StructuralObject.SetValidValue(value, "PickNum");
                ReportPropertyChanged("PickNum");
                OnPickNumChanged();
            }
        }
        private global::System.Int32 _PickNum;
        partial void OnPickNumChanging(global::System.Int32 value);
        partial void OnPickNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoundNum
        {
            get
            {
                return _RoundNum;
            }
            set
            {
                OnRoundNumChanging(value);
                ReportPropertyChanging("RoundNum");
                _RoundNum = StructuralObject.SetValidValue(value, "RoundNum");
                ReportPropertyChanged("RoundNum");
                OnRoundNumChanged();
            }
        }
        private global::System.Int32 _RoundNum;
        partial void OnRoundNumChanging(global::System.Int32 value);
        partial void OnRoundNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                OnPlayerIdChanging(value);
                ReportPropertyChanging("PlayerId");
                _PlayerId = StructuralObject.SetValidValue(value, "PlayerId");
                ReportPropertyChanged("PlayerId");
                OnPlayerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PlayerId;
        partial void OnPlayerIdChanging(Nullable<global::System.Int32> value);
        partial void OnPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PickStartDateTime
        {
            get
            {
                return _PickStartDateTime;
            }
            set
            {
                OnPickStartDateTimeChanging(value);
                ReportPropertyChanging("PickStartDateTime");
                _PickStartDateTime = StructuralObject.SetValidValue(value, "PickStartDateTime");
                ReportPropertyChanged("PickStartDateTime");
                OnPickStartDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _PickStartDateTime;
        partial void OnPickStartDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnPickStartDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PickEndDateTime
        {
            get
            {
                return _PickEndDateTime;
            }
            set
            {
                OnPickEndDateTimeChanging(value);
                ReportPropertyChanging("PickEndDateTime");
                _PickEndDateTime = StructuralObject.SetValidValue(value, "PickEndDateTime");
                ReportPropertyChanged("PickEndDateTime");
                OnPickEndDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _PickEndDateTime;
        partial void OnPickEndDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnPickEndDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="DraftRank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DraftRank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DraftRank object.
        /// </summary>
        /// <param name="draftRankId">Initial value of the DraftRankId property.</param>
        /// <param name="rankId">Initial value of the RankId property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static DraftRank CreateDraftRank(global::System.Int32 draftRankId, global::System.Int32 rankId, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp)
        {
            DraftRank draftRank = new DraftRank();
            draftRank.DraftRankId = draftRankId;
            draftRank.RankId = rankId;
            draftRank.AddTimestamp = addTimestamp;
            draftRank.LastUpdateTimestamp = lastUpdateTimestamp;
            return draftRank;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DraftRankId
        {
            get
            {
                return _DraftRankId;
            }
            set
            {
                if (_DraftRankId != value)
                {
                    OnDraftRankIdChanging(value);
                    ReportPropertyChanging("DraftRankId");
                    _DraftRankId = StructuralObject.SetValidValue(value, "DraftRankId");
                    ReportPropertyChanged("DraftRankId");
                    OnDraftRankIdChanged();
                }
            }
        }
        private global::System.Int32 _DraftRankId;
        partial void OnDraftRankIdChanging(global::System.Int32 value);
        partial void OnDraftRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                OnRankIdChanging(value);
                ReportPropertyChanging("RankId");
                _RankId = StructuralObject.SetValidValue(value, "RankId");
                ReportPropertyChanged("RankId");
                OnRankIdChanged();
            }
        }
        private global::System.Int32 _RankId;
        partial void OnRankIdChanging(global::System.Int32 value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DraftId
        {
            get
            {
                return _DraftId;
            }
            set
            {
                OnDraftIdChanging(value);
                ReportPropertyChanging("DraftId");
                _DraftId = StructuralObject.SetValidValue(value, "DraftId");
                ReportPropertyChanged("DraftId");
                OnDraftIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DraftId;
        partial void OnDraftIdChanging(Nullable<global::System.Int32> value);
        partial void OnDraftIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> PrimaryDraftRanking
        {
            get
            {
                return _PrimaryDraftRanking;
            }
            set
            {
                OnPrimaryDraftRankingChanging(value);
                ReportPropertyChanging("PrimaryDraftRanking");
                _PrimaryDraftRanking = StructuralObject.SetValidValue(value, "PrimaryDraftRanking");
                ReportPropertyChanged("PrimaryDraftRanking");
                OnPrimaryDraftRankingChanged();
            }
        }
        private Nullable<global::System.Boolean> _PrimaryDraftRanking;
        partial void OnPrimaryDraftRankingChanging(Nullable<global::System.Boolean> value);
        partial void OnPrimaryDraftRankingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftRank_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_DraftRank_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_DraftRank_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_DraftRank_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HomeModel.FK_DraftRank_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftRank_Draft", "Draft")]
        public Draft Draft
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_DraftRank_Draft", "Draft").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_DraftRank_Draft", "Draft").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Draft> DraftReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_DraftRank_Draft", "Draft");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Draft>("HomeModel.FK_DraftRank_Draft", "Draft", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="Highlight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Highlight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Highlight object.
        /// </summary>
        /// <param name="highlightId">Initial value of the HighlightId property.</param>
        /// <param name="highlightClass">Initial value of the HighlightClass property.</param>
        /// <param name="highlightValue">Initial value of the HighlightValue property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        /// <param name="highlightName">Initial value of the HighlightName property.</param>
        public static Highlight CreateHighlight(global::System.Int32 highlightId, global::System.String highlightClass, global::System.String highlightValue, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp, global::System.String highlightName)
        {
            Highlight highlight = new Highlight();
            highlight.HighlightId = highlightId;
            highlight.HighlightClass = highlightClass;
            highlight.HighlightValue = highlightValue;
            highlight.AddTimestamp = addTimestamp;
            highlight.LastUpdateTimestamp = lastUpdateTimestamp;
            highlight.HighlightName = highlightName;
            return highlight;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HighlightId
        {
            get
            {
                return _HighlightId;
            }
            set
            {
                if (_HighlightId != value)
                {
                    OnHighlightIdChanging(value);
                    ReportPropertyChanging("HighlightId");
                    _HighlightId = StructuralObject.SetValidValue(value, "HighlightId");
                    ReportPropertyChanged("HighlightId");
                    OnHighlightIdChanged();
                }
            }
        }
        private global::System.Int32 _HighlightId;
        partial void OnHighlightIdChanging(global::System.Int32 value);
        partial void OnHighlightIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HighlightClass
        {
            get
            {
                return _HighlightClass;
            }
            set
            {
                OnHighlightClassChanging(value);
                ReportPropertyChanging("HighlightClass");
                _HighlightClass = StructuralObject.SetValidValue(value, false, "HighlightClass");
                ReportPropertyChanged("HighlightClass");
                OnHighlightClassChanged();
            }
        }
        private global::System.String _HighlightClass;
        partial void OnHighlightClassChanging(global::System.String value);
        partial void OnHighlightClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HighlightValue
        {
            get
            {
                return _HighlightValue;
            }
            set
            {
                OnHighlightValueChanging(value);
                ReportPropertyChanging("HighlightValue");
                _HighlightValue = StructuralObject.SetValidValue(value, false, "HighlightValue");
                ReportPropertyChanged("HighlightValue");
                OnHighlightValueChanged();
            }
        }
        private global::System.String _HighlightValue;
        partial void OnHighlightValueChanging(global::System.String value);
        partial void OnHighlightValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HighlightName
        {
            get
            {
                return _HighlightName;
            }
            set
            {
                OnHighlightNameChanging(value);
                ReportPropertyChanging("HighlightName");
                _HighlightName = StructuralObject.SetValidValue(value, false, "HighlightName");
                ReportPropertyChanged("HighlightName");
                OnHighlightNameChanged();
            }
        }
        private global::System.String _HighlightName;
        partial void OnHighlightNameChanging(global::System.String value);
        partial void OnHighlightNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerHighlight_Highlight", "PlayerHighlight")]
        public EntityCollection<PlayerHighlight> PlayerHighlights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerHighlight>("HomeModel.FK_PlayerHighlight_Highlight", "PlayerHighlight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerHighlight>("HomeModel.FK_PlayerHighlight_Highlight", "PlayerHighlight", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="League")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class League : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new League object.
        /// </summary>
        /// <param name="leagueId">Initial value of the LeagueId property.</param>
        /// <param name="leagueName">Initial value of the LeagueName property.</param>
        public static League CreateLeague(global::System.Int32 leagueId, global::System.String leagueName)
        {
            League league = new League();
            league.LeagueId = leagueId;
            league.LeagueName = leagueName;
            return league;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueId
        {
            get
            {
                return _LeagueId;
            }
            set
            {
                if (_LeagueId != value)
                {
                    OnLeagueIdChanging(value);
                    ReportPropertyChanging("LeagueId");
                    _LeagueId = StructuralObject.SetValidValue(value, "LeagueId");
                    ReportPropertyChanged("LeagueId");
                    OnLeagueIdChanged();
                }
            }
        }
        private global::System.Int32 _LeagueId;
        partial void OnLeagueIdChanging(global::System.Int32 value);
        partial void OnLeagueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LeagueName
        {
            get
            {
                return _LeagueName;
            }
            set
            {
                OnLeagueNameChanging(value);
                ReportPropertyChanging("LeagueName");
                _LeagueName = StructuralObject.SetValidValue(value, false, "LeagueName");
                ReportPropertyChanged("LeagueName");
                OnLeagueNameChanged();
            }
        }
        private global::System.String _LeagueName;
        partial void OnLeagueNameChanging(global::System.String value);
        partial void OnLeagueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddTimestamp;
        partial void OnAddTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_LeagueOwner_League", "LeagueOwner")]
        public EntityCollection<LeagueOwner> LeagueOwners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeagueOwner>("HomeModel.FK_LeagueOwner_League", "LeagueOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeagueOwner>("HomeModel.FK_LeagueOwner_League", "LeagueOwner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Message_League", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("HomeModel.FK_Message_League", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("HomeModel.FK_Message_League", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftChat_League", "DraftChat")]
        public EntityCollection<DraftChat> DraftChats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DraftChat>("HomeModel.FK_DraftChat_League", "DraftChat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DraftChat>("HomeModel.FK_DraftChat_League", "DraftChat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Draft_League", "Draft")]
        public EntityCollection<Draft> Drafts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Draft>("HomeModel.FK_Draft_League", "Draft");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Draft>("HomeModel.FK_Draft_League", "Draft", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="LeagueOwner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LeagueOwner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LeagueOwner object.
        /// </summary>
        /// <param name="leagueOwnerId">Initial value of the LeagueOwnerId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="leagueId">Initial value of the LeagueId property.</param>
        /// <param name="teamName">Initial value of the TeamName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static LeagueOwner CreateLeagueOwner(global::System.Int32 leagueOwnerId, global::System.Int32 userId, global::System.Int32 leagueId, global::System.String teamName, global::System.Boolean isActive, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp)
        {
            LeagueOwner leagueOwner = new LeagueOwner();
            leagueOwner.LeagueOwnerId = leagueOwnerId;
            leagueOwner.UserId = userId;
            leagueOwner.LeagueId = leagueId;
            leagueOwner.TeamName = teamName;
            leagueOwner.IsActive = isActive;
            leagueOwner.AddTimestamp = addTimestamp;
            leagueOwner.LastUpdateTimestamp = lastUpdateTimestamp;
            return leagueOwner;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueOwnerId
        {
            get
            {
                return _LeagueOwnerId;
            }
            set
            {
                if (_LeagueOwnerId != value)
                {
                    OnLeagueOwnerIdChanging(value);
                    ReportPropertyChanging("LeagueOwnerId");
                    _LeagueOwnerId = StructuralObject.SetValidValue(value, "LeagueOwnerId");
                    ReportPropertyChanged("LeagueOwnerId");
                    OnLeagueOwnerIdChanged();
                }
            }
        }
        private global::System.Int32 _LeagueOwnerId;
        partial void OnLeagueOwnerIdChanging(global::System.Int32 value);
        partial void OnLeagueOwnerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LeagueId
        {
            get
            {
                return _LeagueId;
            }
            set
            {
                OnLeagueIdChanging(value);
                ReportPropertyChanging("LeagueId");
                _LeagueId = StructuralObject.SetValidValue(value, "LeagueId");
                ReportPropertyChanged("LeagueId");
                OnLeagueIdChanged();
            }
        }
        private global::System.Int32 _LeagueId;
        partial void OnLeagueIdChanging(global::System.Int32 value);
        partial void OnLeagueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeagueName
        {
            get
            {
                return _LeagueName;
            }
            set
            {
                OnLeagueNameChanging(value);
                ReportPropertyChanging("LeagueName");
                _LeagueName = StructuralObject.SetValidValue(value, true, "LeagueName");
                ReportPropertyChanged("LeagueName");
                OnLeagueNameChanged();
            }
        }
        private global::System.String _LeagueName;
        partial void OnLeagueNameChanging(global::System.String value);
        partial void OnLeagueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TeamName
        {
            get
            {
                return _TeamName;
            }
            set
            {
                OnTeamNameChanging(value);
                ReportPropertyChanging("TeamName");
                _TeamName = StructuralObject.SetValidValue(value, false, "TeamName");
                ReportPropertyChanged("TeamName");
                OnTeamNameChanged();
            }
        }
        private global::System.String _TeamName;
        partial void OnTeamNameChanging(global::System.String value);
        partial void OnTeamNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CssClass
        {
            get
            {
                return _CssClass;
            }
            set
            {
                OnCssClassChanging(value);
                ReportPropertyChanging("CssClass");
                _CssClass = StructuralObject.SetValidValue(value, true, "CssClass");
                ReportPropertyChanged("CssClass");
                OnCssClassChanged();
            }
        }
        private global::System.String _CssClass;
        partial void OnCssClassChanging(global::System.String value);
        partial void OnCssClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_LeagueOwner_CssColor", "CssColor")]
        public CssColor CssColor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CssColor>("HomeModel.FK_LeagueOwner_CssColor", "CssColor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CssColor>("HomeModel.FK_LeagueOwner_CssColor", "CssColor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CssColor> CssColorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CssColor>("HomeModel.FK_LeagueOwner_CssColor", "CssColor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CssColor>("HomeModel.FK_LeagueOwner_CssColor", "CssColor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_LeagueOwner_League", "League")]
        public League League
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("HomeModel.FK_LeagueOwner_League", "League").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("HomeModel.FK_LeagueOwner_League", "League").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<League> LeagueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("HomeModel.FK_LeagueOwner_League", "League");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<League>("HomeModel.FK_LeagueOwner_League", "League", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_LeagueOwner_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_LeagueOwner_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_LeagueOwner_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_LeagueOwner_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HomeModel.FK_LeagueOwner_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="Message")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Message : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Message object.
        /// </summary>
        /// <param name="messageId">Initial value of the MessageId property.</param>
        /// <param name="authorId">Initial value of the AuthorId property.</param>
        /// <param name="messageText">Initial value of the MessageText property.</param>
        /// <param name="allUsers">Initial value of the AllUsers property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static Message CreateMessage(global::System.Int32 messageId, global::System.Int32 authorId, global::System.String messageText, global::System.Boolean allUsers, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp)
        {
            Message message = new Message();
            message.MessageId = messageId;
            message.AuthorId = authorId;
            message.MessageText = messageText;
            message.AllUsers = allUsers;
            message.AddTimestamp = addTimestamp;
            message.LastUpdateTimestamp = lastUpdateTimestamp;
            return message;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MessageId
        {
            get
            {
                return _MessageId;
            }
            set
            {
                if (_MessageId != value)
                {
                    OnMessageIdChanging(value);
                    ReportPropertyChanging("MessageId");
                    _MessageId = StructuralObject.SetValidValue(value, "MessageId");
                    ReportPropertyChanged("MessageId");
                    OnMessageIdChanged();
                }
            }
        }
        private global::System.Int32 _MessageId;
        partial void OnMessageIdChanging(global::System.Int32 value);
        partial void OnMessageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuthorId
        {
            get
            {
                return _AuthorId;
            }
            set
            {
                OnAuthorIdChanging(value);
                ReportPropertyChanging("AuthorId");
                _AuthorId = StructuralObject.SetValidValue(value, "AuthorId");
                ReportPropertyChanged("AuthorId");
                OnAuthorIdChanged();
            }
        }
        private global::System.Int32 _AuthorId;
        partial void OnAuthorIdChanging(global::System.Int32 value);
        partial void OnAuthorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuthorName
        {
            get
            {
                return _AuthorName;
            }
            set
            {
                OnAuthorNameChanging(value);
                ReportPropertyChanging("AuthorName");
                _AuthorName = StructuralObject.SetValidValue(value, true, "AuthorName");
                ReportPropertyChanged("AuthorName");
                OnAuthorNameChanged();
            }
        }
        private global::System.String _AuthorName;
        partial void OnAuthorNameChanging(global::System.String value);
        partial void OnAuthorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, true, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MessageText
        {
            get
            {
                return _MessageText;
            }
            set
            {
                OnMessageTextChanging(value);
                ReportPropertyChanging("MessageText");
                _MessageText = StructuralObject.SetValidValue(value, false, "MessageText");
                ReportPropertyChanged("MessageText");
                OnMessageTextChanged();
            }
        }
        private global::System.String _MessageText;
        partial void OnMessageTextChanging(global::System.String value);
        partial void OnMessageTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllUsers
        {
            get
            {
                return _AllUsers;
            }
            set
            {
                OnAllUsersChanging(value);
                ReportPropertyChanging("AllUsers");
                _AllUsers = StructuralObject.SetValidValue(value, "AllUsers");
                ReportPropertyChanged("AllUsers");
                OnAllUsersChanged();
            }
        }
        private global::System.Boolean _AllUsers;
        partial void OnAllUsersChanging(global::System.Boolean value);
        partial void OnAllUsersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LeagueId
        {
            get
            {
                return _LeagueId;
            }
            set
            {
                OnLeagueIdChanging(value);
                ReportPropertyChanging("LeagueId");
                _LeagueId = StructuralObject.SetValidValue(value, "LeagueId");
                ReportPropertyChanged("LeagueId");
                OnLeagueIdChanged();
            }
        }
        private Nullable<global::System.Int32> _LeagueId;
        partial void OnLeagueIdChanging(Nullable<global::System.Int32> value);
        partial void OnLeagueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LeagueName
        {
            get
            {
                return _LeagueName;
            }
            set
            {
                OnLeagueNameChanging(value);
                ReportPropertyChanging("LeagueName");
                _LeagueName = StructuralObject.SetValidValue(value, true, "LeagueName");
                ReportPropertyChanged("LeagueName");
                OnLeagueNameChanged();
            }
        }
        private global::System.String _LeagueName;
        partial void OnLeagueNameChanging(global::System.String value);
        partial void OnLeagueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Message_League", "League")]
        public League League
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("HomeModel.FK_Message_League", "League").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("HomeModel.FK_Message_League", "League").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<League> LeagueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<League>("HomeModel.FK_Message_League", "League");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<League>("HomeModel.FK_Message_League", "League", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Message_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_Message_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_Message_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_Message_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HomeModel.FK_Message_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="NFLTeam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NFLTeam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NFLTeam object.
        /// </summary>
        /// <param name="teamId">Initial value of the TeamId property.</param>
        /// <param name="teamAbbr">Initial value of the TeamAbbr property.</param>
        /// <param name="locationName">Initial value of the LocationName property.</param>
        /// <param name="teamName">Initial value of the TeamName property.</param>
        /// <param name="conference">Initial value of the Conference property.</param>
        /// <param name="division">Initial value of the Division property.</param>
        public static NFLTeam CreateNFLTeam(global::System.Int32 teamId, global::System.String teamAbbr, global::System.String locationName, global::System.String teamName, global::System.String conference, global::System.String division)
        {
            NFLTeam nFLTeam = new NFLTeam();
            nFLTeam.TeamId = teamId;
            nFLTeam.TeamAbbr = teamAbbr;
            nFLTeam.LocationName = locationName;
            nFLTeam.TeamName = teamName;
            nFLTeam.Conference = conference;
            nFLTeam.Division = division;
            return nFLTeam;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeamId
        {
            get
            {
                return _TeamId;
            }
            set
            {
                OnTeamIdChanging(value);
                ReportPropertyChanging("TeamId");
                _TeamId = StructuralObject.SetValidValue(value, "TeamId");
                ReportPropertyChanged("TeamId");
                OnTeamIdChanged();
            }
        }
        private global::System.Int32 _TeamId;
        partial void OnTeamIdChanging(global::System.Int32 value);
        partial void OnTeamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TeamAbbr
        {
            get
            {
                return _TeamAbbr;
            }
            set
            {
                if (_TeamAbbr != value)
                {
                    OnTeamAbbrChanging(value);
                    ReportPropertyChanging("TeamAbbr");
                    _TeamAbbr = StructuralObject.SetValidValue(value, false, "TeamAbbr");
                    ReportPropertyChanged("TeamAbbr");
                    OnTeamAbbrChanged();
                }
            }
        }
        private global::System.String _TeamAbbr;
        partial void OnTeamAbbrChanging(global::System.String value);
        partial void OnTeamAbbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AbbrDisplay
        {
            get
            {
                return _AbbrDisplay;
            }
            set
            {
                OnAbbrDisplayChanging(value);
                ReportPropertyChanging("AbbrDisplay");
                _AbbrDisplay = StructuralObject.SetValidValue(value, true, "AbbrDisplay");
                ReportPropertyChanged("AbbrDisplay");
                OnAbbrDisplayChanged();
            }
        }
        private global::System.String _AbbrDisplay;
        partial void OnAbbrDisplayChanging(global::System.String value);
        partial void OnAbbrDisplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, false, "LocationName");
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TeamName
        {
            get
            {
                return _TeamName;
            }
            set
            {
                OnTeamNameChanging(value);
                ReportPropertyChanging("TeamName");
                _TeamName = StructuralObject.SetValidValue(value, false, "TeamName");
                ReportPropertyChanged("TeamName");
                OnTeamNameChanged();
            }
        }
        private global::System.String _TeamName;
        partial void OnTeamNameChanging(global::System.String value);
        partial void OnTeamNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Conference
        {
            get
            {
                return _Conference;
            }
            set
            {
                OnConferenceChanging(value);
                ReportPropertyChanging("Conference");
                _Conference = StructuralObject.SetValidValue(value, false, "Conference");
                ReportPropertyChanged("Conference");
                OnConferenceChanged();
            }
        }
        private global::System.String _Conference;
        partial void OnConferenceChanging(global::System.String value);
        partial void OnConferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Division
        {
            get
            {
                return _Division;
            }
            set
            {
                OnDivisionChanging(value);
                ReportPropertyChanging("Division");
                _Division = StructuralObject.SetValidValue(value, false, "Division");
                ReportPropertyChanged("Division");
                OnDivisionChanged();
            }
        }
        private global::System.String _Division;
        partial void OnDivisionChanging(global::System.String value);
        partial void OnDivisionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Player_NFLTeam", "Player")]
        public EntityCollection<Player> Players
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Player>("HomeModel.FK_Player_NFLTeam", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Player>("HomeModel.FK_Player_NFLTeam", "Player", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_ByeWeek_NFLTeam", "ByeWeek")]
        public EntityCollection<ByeWeek> ByeWeeks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ByeWeek>("HomeModel.FK_ByeWeek_NFLTeam", "ByeWeek");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ByeWeek>("HomeModel.FK_ByeWeek_NFLTeam", "ByeWeek", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Player object.
        /// </summary>
        /// <param name="playerId">Initial value of the PlayerId property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="playerName">Initial value of the PlayerName property.</param>
        /// <param name="position">Initial value of the Position property.</param>
        /// <param name="nFLTeam">Initial value of the NFLTeam property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isDrafted">Initial value of the IsDrafted property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static Player CreatePlayer(global::System.Int32 playerId, global::System.String firstName, global::System.String lastName, global::System.String playerName, global::System.String position, global::System.String nFLTeam, global::System.Boolean isActive, global::System.Boolean isDrafted, global::System.DateTime lastUpdateTimestamp)
        {
            Player player = new Player();
            player.PlayerId = playerId;
            player.FirstName = firstName;
            player.LastName = lastName;
            player.PlayerName = playerName;
            player.Position = position;
            player.NFLTeam = nFLTeam;
            player.IsActive = isActive;
            player.IsDrafted = isDrafted;
            player.LastUpdateTimestamp = lastUpdateTimestamp;
            return player;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                if (_PlayerId != value)
                {
                    OnPlayerIdChanging(value);
                    ReportPropertyChanging("PlayerId");
                    _PlayerId = StructuralObject.SetValidValue(value, "PlayerId");
                    ReportPropertyChanged("PlayerId");
                    OnPlayerIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayerId;
        partial void OnPlayerIdChanging(global::System.Int32 value);
        partial void OnPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TruePlayerId
        {
            get
            {
                return _TruePlayerId;
            }
            set
            {
                OnTruePlayerIdChanging(value);
                ReportPropertyChanging("TruePlayerId");
                _TruePlayerId = StructuralObject.SetValidValue(value, "TruePlayerId");
                ReportPropertyChanged("TruePlayerId");
                OnTruePlayerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TruePlayerId;
        partial void OnTruePlayerIdChanging(Nullable<global::System.Int32> value);
        partial void OnTruePlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlayerName
        {
            get
            {
                return _PlayerName;
            }
            set
            {
                OnPlayerNameChanging(value);
                ReportPropertyChanging("PlayerName");
                _PlayerName = StructuralObject.SetValidValue(value, true, "PlayerName");
                ReportPropertyChanged("PlayerName");
                OnPlayerNameChanged();
            }
        }
        private global::System.String _PlayerName;
        partial void OnPlayerNameChanging(global::System.String value);
        partial void OnPlayerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value, false, "Position");
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private global::System.String _Position;
        partial void OnPositionChanging(global::System.String value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NFLTeam
        {
            get
            {
                return _NFLTeam;
            }
            set
            {
                OnNFLTeamChanging(value);
                ReportPropertyChanging("NFLTeam");
                _NFLTeam = StructuralObject.SetValidValue(value, false, "NFLTeam");
                ReportPropertyChanged("NFLTeam");
                OnNFLTeamChanged();
            }
        }
        private global::System.String _NFLTeam;
        partial void OnNFLTeamChanging(global::System.String value);
        partial void OnNFLTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value, "DateOfBirth");
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDrafted
        {
            get
            {
                return _IsDrafted;
            }
            set
            {
                OnIsDraftedChanging(value);
                ReportPropertyChanging("IsDrafted");
                _IsDrafted = StructuralObject.SetValidValue(value, "IsDrafted");
                ReportPropertyChanged("IsDrafted");
                OnIsDraftedChanged();
            }
        }
        private global::System.Boolean _IsDrafted;
        partial void OnIsDraftedChanging(global::System.Boolean value);
        partial void OnIsDraftedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddTimestamp;
        partial void OnAddTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftPick_Player", "DraftPick")]
        public EntityCollection<DraftPick> DraftPicks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DraftPick>("HomeModel.FK_DraftPick_Player", "DraftPick");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DraftPick>("HomeModel.FK_DraftPick_Player", "DraftPick", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Player_NFLTeam", "NFLTeam")]
        public NFLTeam NFLTeam1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NFLTeam>("HomeModel.FK_Player_NFLTeam", "NFLTeam").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NFLTeam>("HomeModel.FK_Player_NFLTeam", "NFLTeam").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NFLTeam> NFLTeam1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NFLTeam>("HomeModel.FK_Player_NFLTeam", "NFLTeam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NFLTeam>("HomeModel.FK_Player_NFLTeam", "NFLTeam", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Player_Player", "Player1")]
        public Player Player1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_Player_Player", "Player1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_Player_Player", "Player1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> Player1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_Player_Player", "Player1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("HomeModel.FK_Player_Player", "Player1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Player_Player", "Player")]
        public Player Player2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_Player_Player", "Player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_Player_Player", "Player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> Player2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_Player_Player", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("HomeModel.FK_Player_Player", "Player", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerAdjustment_PlayerNew", "PlayerAdjustment")]
        public EntityCollection<PlayerAdjustment> PlayerAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerAdjustment>("HomeModel.FK_PlayerAdjustment_PlayerNew", "PlayerAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerAdjustment>("HomeModel.FK_PlayerAdjustment_PlayerNew", "PlayerAdjustment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerAdjustment_PlayerOld", "PlayerAdjustment")]
        public EntityCollection<PlayerAdjustment> PlayerAdjustments1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerAdjustment>("HomeModel.FK_PlayerAdjustment_PlayerOld", "PlayerAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerAdjustment>("HomeModel.FK_PlayerAdjustment_PlayerOld", "PlayerAdjustment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerRank_Player", "PlayerRank")]
        public EntityCollection<PlayerRank> PlayerRanks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerRank>("HomeModel.FK_PlayerRank_Player", "PlayerRank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerRank>("HomeModel.FK_PlayerRank_Player", "PlayerRank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerHighlight_Player", "PlayerHighlight")]
        public EntityCollection<PlayerHighlight> PlayerHighlights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerHighlight>("HomeModel.FK_PlayerHighlight_Player", "PlayerHighlight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerHighlight>("HomeModel.FK_PlayerHighlight_Player", "PlayerHighlight", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="PlayerAdjustment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayerAdjustment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayerAdjustment object.
        /// </summary>
        /// <param name="adjustmentId">Initial value of the AdjustmentId property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static PlayerAdjustment CreatePlayerAdjustment(global::System.Int32 adjustmentId, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp)
        {
            PlayerAdjustment playerAdjustment = new PlayerAdjustment();
            playerAdjustment.AdjustmentId = adjustmentId;
            playerAdjustment.AddTimestamp = addTimestamp;
            playerAdjustment.LastUpdateTimestamp = lastUpdateTimestamp;
            return playerAdjustment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AdjustmentId
        {
            get
            {
                return _AdjustmentId;
            }
            set
            {
                if (_AdjustmentId != value)
                {
                    OnAdjustmentIdChanging(value);
                    ReportPropertyChanging("AdjustmentId");
                    _AdjustmentId = StructuralObject.SetValidValue(value, "AdjustmentId");
                    ReportPropertyChanged("AdjustmentId");
                    OnAdjustmentIdChanged();
                }
            }
        }
        private global::System.Int32 _AdjustmentId;
        partial void OnAdjustmentIdChanging(global::System.Int32 value);
        partial void OnAdjustmentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OldPlayerId
        {
            get
            {
                return _OldPlayerId;
            }
            set
            {
                OnOldPlayerIdChanging(value);
                ReportPropertyChanging("OldPlayerId");
                _OldPlayerId = StructuralObject.SetValidValue(value, "OldPlayerId");
                ReportPropertyChanged("OldPlayerId");
                OnOldPlayerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _OldPlayerId;
        partial void OnOldPlayerIdChanging(Nullable<global::System.Int32> value);
        partial void OnOldPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NewPlayerId
        {
            get
            {
                return _NewPlayerId;
            }
            set
            {
                OnNewPlayerIdChanging(value);
                ReportPropertyChanging("NewPlayerId");
                _NewPlayerId = StructuralObject.SetValidValue(value, "NewPlayerId");
                ReportPropertyChanged("NewPlayerId");
                OnNewPlayerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _NewPlayerId;
        partial void OnNewPlayerIdChanging(Nullable<global::System.Int32> value);
        partial void OnNewPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TruePlayerId
        {
            get
            {
                return _TruePlayerId;
            }
            set
            {
                OnTruePlayerIdChanging(value);
                ReportPropertyChanging("TruePlayerId");
                _TruePlayerId = StructuralObject.SetValidValue(value, "TruePlayerId");
                ReportPropertyChanged("TruePlayerId");
                OnTruePlayerIdChanged();
            }
        }
        private Nullable<global::System.Int32> _TruePlayerId;
        partial void OnTruePlayerIdChanging(Nullable<global::System.Int32> value);
        partial void OnTruePlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewFirstName
        {
            get
            {
                return _NewFirstName;
            }
            set
            {
                OnNewFirstNameChanging(value);
                ReportPropertyChanging("NewFirstName");
                _NewFirstName = StructuralObject.SetValidValue(value, true, "NewFirstName");
                ReportPropertyChanged("NewFirstName");
                OnNewFirstNameChanged();
            }
        }
        private global::System.String _NewFirstName;
        partial void OnNewFirstNameChanging(global::System.String value);
        partial void OnNewFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewLastName
        {
            get
            {
                return _NewLastName;
            }
            set
            {
                OnNewLastNameChanging(value);
                ReportPropertyChanging("NewLastName");
                _NewLastName = StructuralObject.SetValidValue(value, true, "NewLastName");
                ReportPropertyChanged("NewLastName");
                OnNewLastNameChanged();
            }
        }
        private global::System.String _NewLastName;
        partial void OnNewLastNameChanging(global::System.String value);
        partial void OnNewLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewPosition
        {
            get
            {
                return _NewPosition;
            }
            set
            {
                OnNewPositionChanging(value);
                ReportPropertyChanging("NewPosition");
                _NewPosition = StructuralObject.SetValidValue(value, true, "NewPosition");
                ReportPropertyChanged("NewPosition");
                OnNewPositionChanged();
            }
        }
        private global::System.String _NewPosition;
        partial void OnNewPositionChanging(global::System.String value);
        partial void OnNewPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewNFLTeam
        {
            get
            {
                return _NewNFLTeam;
            }
            set
            {
                OnNewNFLTeamChanging(value);
                ReportPropertyChanging("NewNFLTeam");
                _NewNFLTeam = StructuralObject.SetValidValue(value, true, "NewNFLTeam");
                ReportPropertyChanged("NewNFLTeam");
                OnNewNFLTeamChanged();
            }
        }
        private global::System.String _NewNFLTeam;
        partial void OnNewNFLTeamChanging(global::System.String value);
        partial void OnNewNFLTeamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, true, "Action");
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NewPlayerName
        {
            get
            {
                return _NewPlayerName;
            }
            set
            {
                OnNewPlayerNameChanging(value);
                ReportPropertyChanging("NewPlayerName");
                _NewPlayerName = StructuralObject.SetValidValue(value, true, "NewPlayerName");
                ReportPropertyChanged("NewPlayerName");
                OnNewPlayerNameChanged();
            }
        }
        private global::System.String _NewPlayerName;
        partial void OnNewPlayerNameChanging(global::System.String value);
        partial void OnNewPlayerNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerAdjustment_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_PlayerAdjustment_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_PlayerAdjustment_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_PlayerAdjustment_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HomeModel.FK_PlayerAdjustment_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerAdjustment_PlayerNew", "Player")]
        public Player Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_PlayerAdjustment_PlayerNew", "Player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_PlayerAdjustment_PlayerNew", "Player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> PlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_PlayerAdjustment_PlayerNew", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("HomeModel.FK_PlayerAdjustment_PlayerNew", "Player", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerAdjustment_PlayerOld", "Player")]
        public Player Player1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_PlayerAdjustment_PlayerOld", "Player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_PlayerAdjustment_PlayerOld", "Player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> Player1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_PlayerAdjustment_PlayerOld", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("HomeModel.FK_PlayerAdjustment_PlayerOld", "Player", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="PlayerHighlight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayerHighlight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayerHighlight object.
        /// </summary>
        /// <param name="playerHighlightId">Initial value of the PlayerHighlightId property.</param>
        /// <param name="draftId">Initial value of the DraftId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="playerId">Initial value of the PlayerId property.</param>
        /// <param name="highlightId">Initial value of the HighlightId property.</param>
        /// <param name="rankNum">Initial value of the RankNum property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static PlayerHighlight CreatePlayerHighlight(global::System.Int32 playerHighlightId, global::System.Int32 draftId, global::System.Int32 userId, global::System.Int32 playerId, global::System.Int32 highlightId, global::System.Int32 rankNum, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp)
        {
            PlayerHighlight playerHighlight = new PlayerHighlight();
            playerHighlight.PlayerHighlightId = playerHighlightId;
            playerHighlight.DraftId = draftId;
            playerHighlight.UserId = userId;
            playerHighlight.PlayerId = playerId;
            playerHighlight.HighlightId = highlightId;
            playerHighlight.RankNum = rankNum;
            playerHighlight.AddTimestamp = addTimestamp;
            playerHighlight.LastUpdateTimestamp = lastUpdateTimestamp;
            return playerHighlight;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerHighlightId
        {
            get
            {
                return _PlayerHighlightId;
            }
            set
            {
                if (_PlayerHighlightId != value)
                {
                    OnPlayerHighlightIdChanging(value);
                    ReportPropertyChanging("PlayerHighlightId");
                    _PlayerHighlightId = StructuralObject.SetValidValue(value, "PlayerHighlightId");
                    ReportPropertyChanged("PlayerHighlightId");
                    OnPlayerHighlightIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayerHighlightId;
        partial void OnPlayerHighlightIdChanging(global::System.Int32 value);
        partial void OnPlayerHighlightIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DraftId
        {
            get
            {
                return _DraftId;
            }
            set
            {
                OnDraftIdChanging(value);
                ReportPropertyChanging("DraftId");
                _DraftId = StructuralObject.SetValidValue(value, "DraftId");
                ReportPropertyChanged("DraftId");
                OnDraftIdChanged();
            }
        }
        private global::System.Int32 _DraftId;
        partial void OnDraftIdChanging(global::System.Int32 value);
        partial void OnDraftIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                OnPlayerIdChanging(value);
                ReportPropertyChanging("PlayerId");
                _PlayerId = StructuralObject.SetValidValue(value, "PlayerId");
                ReportPropertyChanged("PlayerId");
                OnPlayerIdChanged();
            }
        }
        private global::System.Int32 _PlayerId;
        partial void OnPlayerIdChanging(global::System.Int32 value);
        partial void OnPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HighlightId
        {
            get
            {
                return _HighlightId;
            }
            set
            {
                OnHighlightIdChanging(value);
                ReportPropertyChanging("HighlightId");
                _HighlightId = StructuralObject.SetValidValue(value, "HighlightId");
                ReportPropertyChanged("HighlightId");
                OnHighlightIdChanged();
            }
        }
        private global::System.Int32 _HighlightId;
        partial void OnHighlightIdChanging(global::System.Int32 value);
        partial void OnHighlightIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HighlightClass
        {
            get
            {
                return _HighlightClass;
            }
            set
            {
                OnHighlightClassChanging(value);
                ReportPropertyChanging("HighlightClass");
                _HighlightClass = StructuralObject.SetValidValue(value, true, "HighlightClass");
                ReportPropertyChanged("HighlightClass");
                OnHighlightClassChanged();
            }
        }
        private global::System.String _HighlightClass;
        partial void OnHighlightClassChanging(global::System.String value);
        partial void OnHighlightClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankNum
        {
            get
            {
                return _RankNum;
            }
            set
            {
                OnRankNumChanging(value);
                ReportPropertyChanging("RankNum");
                _RankNum = StructuralObject.SetValidValue(value, "RankNum");
                ReportPropertyChanged("RankNum");
                OnRankNumChanged();
            }
        }
        private global::System.Int32 _RankNum;
        partial void OnRankNumChanging(global::System.Int32 value);
        partial void OnRankNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerHighlight_Draft", "Draft")]
        public Draft Draft
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_PlayerHighlight_Draft", "Draft").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_PlayerHighlight_Draft", "Draft").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Draft> DraftReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Draft>("HomeModel.FK_PlayerHighlight_Draft", "Draft");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Draft>("HomeModel.FK_PlayerHighlight_Draft", "Draft", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerHighlight_Highlight", "Highlight")]
        public Highlight Highlight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Highlight>("HomeModel.FK_PlayerHighlight_Highlight", "Highlight").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Highlight>("HomeModel.FK_PlayerHighlight_Highlight", "Highlight").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Highlight> HighlightReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Highlight>("HomeModel.FK_PlayerHighlight_Highlight", "Highlight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Highlight>("HomeModel.FK_PlayerHighlight_Highlight", "Highlight", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerHighlight_Player", "Player")]
        public Player Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_PlayerHighlight_Player", "Player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_PlayerHighlight_Player", "Player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> PlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_PlayerHighlight_Player", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("HomeModel.FK_PlayerHighlight_Player", "Player", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerHighlight_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_PlayerHighlight_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_PlayerHighlight_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_PlayerHighlight_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HomeModel.FK_PlayerHighlight_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="PlayerRank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayerRank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayerRank object.
        /// </summary>
        /// <param name="playerRankId">Initial value of the PlayerRankId property.</param>
        /// <param name="rankId">Initial value of the RankId property.</param>
        /// <param name="playerId">Initial value of the PlayerId property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static PlayerRank CreatePlayerRank(global::System.Int32 playerRankId, global::System.Int32 rankId, global::System.Int32 playerId, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp)
        {
            PlayerRank playerRank = new PlayerRank();
            playerRank.PlayerRankId = playerRankId;
            playerRank.RankId = rankId;
            playerRank.PlayerId = playerId;
            playerRank.AddTimestamp = addTimestamp;
            playerRank.LastUpdateTimestamp = lastUpdateTimestamp;
            return playerRank;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerRankId
        {
            get
            {
                return _PlayerRankId;
            }
            set
            {
                if (_PlayerRankId != value)
                {
                    OnPlayerRankIdChanging(value);
                    ReportPropertyChanging("PlayerRankId");
                    _PlayerRankId = StructuralObject.SetValidValue(value, "PlayerRankId");
                    ReportPropertyChanged("PlayerRankId");
                    OnPlayerRankIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayerRankId;
        partial void OnPlayerRankIdChanging(global::System.Int32 value);
        partial void OnPlayerRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                OnRankIdChanging(value);
                ReportPropertyChanging("RankId");
                _RankId = StructuralObject.SetValidValue(value, "RankId");
                ReportPropertyChanged("RankId");
                OnRankIdChanged();
            }
        }
        private global::System.Int32 _RankId;
        partial void OnRankIdChanging(global::System.Int32 value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                OnPlayerIdChanging(value);
                ReportPropertyChanging("PlayerId");
                _PlayerId = StructuralObject.SetValidValue(value, "PlayerId");
                ReportPropertyChanged("PlayerId");
                OnPlayerIdChanged();
            }
        }
        private global::System.Int32 _PlayerId;
        partial void OnPlayerIdChanging(global::System.Int32 value);
        partial void OnPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RankNum
        {
            get
            {
                return _RankNum;
            }
            set
            {
                OnRankNumChanging(value);
                ReportPropertyChanging("RankNum");
                _RankNum = StructuralObject.SetValidValue(value, "RankNum");
                ReportPropertyChanged("RankNum");
                OnRankNumChanged();
            }
        }
        private Nullable<global::System.Int32> _RankNum;
        partial void OnRankNumChanging(Nullable<global::System.Int32> value);
        partial void OnRankNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PosRankNum
        {
            get
            {
                return _PosRankNum;
            }
            set
            {
                OnPosRankNumChanging(value);
                ReportPropertyChanging("PosRankNum");
                _PosRankNum = StructuralObject.SetValidValue(value, "PosRankNum");
                ReportPropertyChanged("PosRankNum");
                OnPosRankNumChanged();
            }
        }
        private Nullable<global::System.Int32> _PosRankNum;
        partial void OnPosRankNumChanging(Nullable<global::System.Int32> value);
        partial void OnPosRankNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AuctionValue
        {
            get
            {
                return _AuctionValue;
            }
            set
            {
                OnAuctionValueChanging(value);
                ReportPropertyChanging("AuctionValue");
                _AuctionValue = StructuralObject.SetValidValue(value, "AuctionValue");
                ReportPropertyChanged("AuctionValue");
                OnAuctionValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _AuctionValue;
        partial void OnAuctionValueChanging(Nullable<global::System.Decimal> value);
        partial void OnAuctionValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerRank_Rank", "Rank")]
        public Rank Rank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("HomeModel.FK_PlayerRank_Rank", "Rank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("HomeModel.FK_PlayerRank_Rank", "Rank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Rank> RankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Rank>("HomeModel.FK_PlayerRank_Rank", "Rank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Rank>("HomeModel.FK_PlayerRank_Rank", "Rank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerRank_Player", "Player")]
        public Player Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_PlayerRank_Player", "Player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_PlayerRank_Player", "Player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> PlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("HomeModel.FK_PlayerRank_Player", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("HomeModel.FK_PlayerRank_Player", "Player", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="PlayerRankHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayerRankHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayerRankHistory object.
        /// </summary>
        /// <param name="playerRankId">Initial value of the PlayerRankId property.</param>
        /// <param name="rankId">Initial value of the RankId property.</param>
        /// <param name="playerId">Initial value of the PlayerId property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static PlayerRankHistory CreatePlayerRankHistory(global::System.Int32 playerRankId, global::System.Int32 rankId, global::System.Int32 playerId, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp)
        {
            PlayerRankHistory playerRankHistory = new PlayerRankHistory();
            playerRankHistory.PlayerRankId = playerRankId;
            playerRankHistory.RankId = rankId;
            playerRankHistory.PlayerId = playerId;
            playerRankHistory.AddTimestamp = addTimestamp;
            playerRankHistory.LastUpdateTimestamp = lastUpdateTimestamp;
            return playerRankHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerRankId
        {
            get
            {
                return _PlayerRankId;
            }
            set
            {
                if (_PlayerRankId != value)
                {
                    OnPlayerRankIdChanging(value);
                    ReportPropertyChanging("PlayerRankId");
                    _PlayerRankId = StructuralObject.SetValidValue(value, "PlayerRankId");
                    ReportPropertyChanged("PlayerRankId");
                    OnPlayerRankIdChanged();
                }
            }
        }
        private global::System.Int32 _PlayerRankId;
        partial void OnPlayerRankIdChanging(global::System.Int32 value);
        partial void OnPlayerRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PlayerRankGroupId
        {
            get
            {
                return _PlayerRankGroupId;
            }
            set
            {
                OnPlayerRankGroupIdChanging(value);
                ReportPropertyChanging("PlayerRankGroupId");
                _PlayerRankGroupId = StructuralObject.SetValidValue(value, "PlayerRankGroupId");
                ReportPropertyChanged("PlayerRankGroupId");
                OnPlayerRankGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PlayerRankGroupId;
        partial void OnPlayerRankGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnPlayerRankGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                OnRankIdChanging(value);
                ReportPropertyChanging("RankId");
                _RankId = StructuralObject.SetValidValue(value, "RankId");
                ReportPropertyChanged("RankId");
                OnRankIdChanged();
            }
        }
        private global::System.Int32 _RankId;
        partial void OnRankIdChanging(global::System.Int32 value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerId
        {
            get
            {
                return _PlayerId;
            }
            set
            {
                OnPlayerIdChanging(value);
                ReportPropertyChanging("PlayerId");
                _PlayerId = StructuralObject.SetValidValue(value, "PlayerId");
                ReportPropertyChanged("PlayerId");
                OnPlayerIdChanged();
            }
        }
        private global::System.Int32 _PlayerId;
        partial void OnPlayerIdChanging(global::System.Int32 value);
        partial void OnPlayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RankNum
        {
            get
            {
                return _RankNum;
            }
            set
            {
                OnRankNumChanging(value);
                ReportPropertyChanging("RankNum");
                _RankNum = StructuralObject.SetValidValue(value, "RankNum");
                ReportPropertyChanged("RankNum");
                OnRankNumChanged();
            }
        }
        private Nullable<global::System.Int32> _RankNum;
        partial void OnRankNumChanging(Nullable<global::System.Int32> value);
        partial void OnRankNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PosRankNum
        {
            get
            {
                return _PosRankNum;
            }
            set
            {
                OnPosRankNumChanging(value);
                ReportPropertyChanging("PosRankNum");
                _PosRankNum = StructuralObject.SetValidValue(value, "PosRankNum");
                ReportPropertyChanged("PosRankNum");
                OnPosRankNumChanged();
            }
        }
        private Nullable<global::System.Int32> _PosRankNum;
        partial void OnPosRankNumChanging(Nullable<global::System.Int32> value);
        partial void OnPosRankNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AuctionValue
        {
            get
            {
                return _AuctionValue;
            }
            set
            {
                OnAuctionValueChanging(value);
                ReportPropertyChanging("AuctionValue");
                _AuctionValue = StructuralObject.SetValidValue(value, "AuctionValue");
                ReportPropertyChanged("AuctionValue");
                OnAuctionValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _AuctionValue;
        partial void OnAuctionValueChanging(Nullable<global::System.Decimal> value);
        partial void OnAuctionValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="PlayerRankOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PlayerRankOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PlayerRankOption object.
        /// </summary>
        /// <param name="playerRankOptionId">Initial value of the PlayerRankOptionId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="expandOverall">Initial value of the ExpandOverall property.</param>
        /// <param name="expandQB">Initial value of the ExpandQB property.</param>
        /// <param name="expandRB">Initial value of the ExpandRB property.</param>
        /// <param name="expandWRTE">Initial value of the ExpandWRTE property.</param>
        /// <param name="expandDEF">Initial value of the ExpandDEF property.</param>
        /// <param name="expandK">Initial value of the ExpandK property.</param>
        /// <param name="expandQueue">Initial value of the ExpandQueue property.</param>
        /// <param name="hideOverall">Initial value of the HideOverall property.</param>
        /// <param name="hideQB">Initial value of the HideQB property.</param>
        /// <param name="hideRB">Initial value of the HideRB property.</param>
        /// <param name="hideWRTE">Initial value of the HideWRTE property.</param>
        /// <param name="hideDEF">Initial value of the HideDEF property.</param>
        /// <param name="hideK">Initial value of the HideK property.</param>
        /// <param name="hideQueue">Initial value of the HideQueue property.</param>
        /// <param name="showHighlighting">Initial value of the ShowHighlighting property.</param>
        /// <param name="lockHighlighting">Initial value of the LockHighlighting property.</param>
        public static PlayerRankOption CreatePlayerRankOption(global::System.Guid playerRankOptionId, global::System.Int32 userId, global::System.Boolean expandOverall, global::System.Boolean expandQB, global::System.Boolean expandRB, global::System.Boolean expandWRTE, global::System.Boolean expandDEF, global::System.Boolean expandK, global::System.Boolean expandQueue, global::System.Boolean hideOverall, global::System.Boolean hideQB, global::System.Boolean hideRB, global::System.Boolean hideWRTE, global::System.Boolean hideDEF, global::System.Boolean hideK, global::System.Boolean hideQueue, global::System.Boolean showHighlighting, global::System.Boolean lockHighlighting)
        {
            PlayerRankOption playerRankOption = new PlayerRankOption();
            playerRankOption.PlayerRankOptionId = playerRankOptionId;
            playerRankOption.UserId = userId;
            playerRankOption.ExpandOverall = expandOverall;
            playerRankOption.ExpandQB = expandQB;
            playerRankOption.ExpandRB = expandRB;
            playerRankOption.ExpandWRTE = expandWRTE;
            playerRankOption.ExpandDEF = expandDEF;
            playerRankOption.ExpandK = expandK;
            playerRankOption.ExpandQueue = expandQueue;
            playerRankOption.HideOverall = hideOverall;
            playerRankOption.HideQB = hideQB;
            playerRankOption.HideRB = hideRB;
            playerRankOption.HideWRTE = hideWRTE;
            playerRankOption.HideDEF = hideDEF;
            playerRankOption.HideK = hideK;
            playerRankOption.HideQueue = hideQueue;
            playerRankOption.ShowHighlighting = showHighlighting;
            playerRankOption.LockHighlighting = lockHighlighting;
            return playerRankOption;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PlayerRankOptionId
        {
            get
            {
                return _PlayerRankOptionId;
            }
            set
            {
                if (_PlayerRankOptionId != value)
                {
                    OnPlayerRankOptionIdChanging(value);
                    ReportPropertyChanging("PlayerRankOptionId");
                    _PlayerRankOptionId = StructuralObject.SetValidValue(value, "PlayerRankOptionId");
                    ReportPropertyChanged("PlayerRankOptionId");
                    OnPlayerRankOptionIdChanged();
                }
            }
        }
        private global::System.Guid _PlayerRankOptionId;
        partial void OnPlayerRankOptionIdChanging(global::System.Guid value);
        partial void OnPlayerRankOptionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                OnRankIdChanging(value);
                ReportPropertyChanging("RankId");
                _RankId = StructuralObject.SetValidValue(value, "RankId");
                ReportPropertyChanged("RankId");
                OnRankIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RankId;
        partial void OnRankIdChanging(Nullable<global::System.Int32> value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DraftId
        {
            get
            {
                return _DraftId;
            }
            set
            {
                OnDraftIdChanging(value);
                ReportPropertyChanging("DraftId");
                _DraftId = StructuralObject.SetValidValue(value, "DraftId");
                ReportPropertyChanged("DraftId");
                OnDraftIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DraftId;
        partial void OnDraftIdChanging(Nullable<global::System.Int32> value);
        partial void OnDraftIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ExpandOverall
        {
            get
            {
                return _ExpandOverall;
            }
            set
            {
                OnExpandOverallChanging(value);
                ReportPropertyChanging("ExpandOverall");
                _ExpandOverall = StructuralObject.SetValidValue(value, "ExpandOverall");
                ReportPropertyChanged("ExpandOverall");
                OnExpandOverallChanged();
            }
        }
        private global::System.Boolean _ExpandOverall;
        partial void OnExpandOverallChanging(global::System.Boolean value);
        partial void OnExpandOverallChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ExpandQB
        {
            get
            {
                return _ExpandQB;
            }
            set
            {
                OnExpandQBChanging(value);
                ReportPropertyChanging("ExpandQB");
                _ExpandQB = StructuralObject.SetValidValue(value, "ExpandQB");
                ReportPropertyChanged("ExpandQB");
                OnExpandQBChanged();
            }
        }
        private global::System.Boolean _ExpandQB;
        partial void OnExpandQBChanging(global::System.Boolean value);
        partial void OnExpandQBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ExpandRB
        {
            get
            {
                return _ExpandRB;
            }
            set
            {
                OnExpandRBChanging(value);
                ReportPropertyChanging("ExpandRB");
                _ExpandRB = StructuralObject.SetValidValue(value, "ExpandRB");
                ReportPropertyChanged("ExpandRB");
                OnExpandRBChanged();
            }
        }
        private global::System.Boolean _ExpandRB;
        partial void OnExpandRBChanging(global::System.Boolean value);
        partial void OnExpandRBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ExpandWRTE
        {
            get
            {
                return _ExpandWRTE;
            }
            set
            {
                OnExpandWRTEChanging(value);
                ReportPropertyChanging("ExpandWRTE");
                _ExpandWRTE = StructuralObject.SetValidValue(value, "ExpandWRTE");
                ReportPropertyChanged("ExpandWRTE");
                OnExpandWRTEChanged();
            }
        }
        private global::System.Boolean _ExpandWRTE;
        partial void OnExpandWRTEChanging(global::System.Boolean value);
        partial void OnExpandWRTEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ExpandDEF
        {
            get
            {
                return _ExpandDEF;
            }
            set
            {
                OnExpandDEFChanging(value);
                ReportPropertyChanging("ExpandDEF");
                _ExpandDEF = StructuralObject.SetValidValue(value, "ExpandDEF");
                ReportPropertyChanged("ExpandDEF");
                OnExpandDEFChanged();
            }
        }
        private global::System.Boolean _ExpandDEF;
        partial void OnExpandDEFChanging(global::System.Boolean value);
        partial void OnExpandDEFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ExpandK
        {
            get
            {
                return _ExpandK;
            }
            set
            {
                OnExpandKChanging(value);
                ReportPropertyChanging("ExpandK");
                _ExpandK = StructuralObject.SetValidValue(value, "ExpandK");
                ReportPropertyChanged("ExpandK");
                OnExpandKChanged();
            }
        }
        private global::System.Boolean _ExpandK;
        partial void OnExpandKChanging(global::System.Boolean value);
        partial void OnExpandKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ExpandQueue
        {
            get
            {
                return _ExpandQueue;
            }
            set
            {
                OnExpandQueueChanging(value);
                ReportPropertyChanging("ExpandQueue");
                _ExpandQueue = StructuralObject.SetValidValue(value, "ExpandQueue");
                ReportPropertyChanged("ExpandQueue");
                OnExpandQueueChanged();
            }
        }
        private global::System.Boolean _ExpandQueue;
        partial void OnExpandQueueChanging(global::System.Boolean value);
        partial void OnExpandQueueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HideOverall
        {
            get
            {
                return _HideOverall;
            }
            set
            {
                OnHideOverallChanging(value);
                ReportPropertyChanging("HideOverall");
                _HideOverall = StructuralObject.SetValidValue(value, "HideOverall");
                ReportPropertyChanged("HideOverall");
                OnHideOverallChanged();
            }
        }
        private global::System.Boolean _HideOverall;
        partial void OnHideOverallChanging(global::System.Boolean value);
        partial void OnHideOverallChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HideQB
        {
            get
            {
                return _HideQB;
            }
            set
            {
                OnHideQBChanging(value);
                ReportPropertyChanging("HideQB");
                _HideQB = StructuralObject.SetValidValue(value, "HideQB");
                ReportPropertyChanged("HideQB");
                OnHideQBChanged();
            }
        }
        private global::System.Boolean _HideQB;
        partial void OnHideQBChanging(global::System.Boolean value);
        partial void OnHideQBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HideRB
        {
            get
            {
                return _HideRB;
            }
            set
            {
                OnHideRBChanging(value);
                ReportPropertyChanging("HideRB");
                _HideRB = StructuralObject.SetValidValue(value, "HideRB");
                ReportPropertyChanged("HideRB");
                OnHideRBChanged();
            }
        }
        private global::System.Boolean _HideRB;
        partial void OnHideRBChanging(global::System.Boolean value);
        partial void OnHideRBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HideWRTE
        {
            get
            {
                return _HideWRTE;
            }
            set
            {
                OnHideWRTEChanging(value);
                ReportPropertyChanging("HideWRTE");
                _HideWRTE = StructuralObject.SetValidValue(value, "HideWRTE");
                ReportPropertyChanged("HideWRTE");
                OnHideWRTEChanged();
            }
        }
        private global::System.Boolean _HideWRTE;
        partial void OnHideWRTEChanging(global::System.Boolean value);
        partial void OnHideWRTEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HideDEF
        {
            get
            {
                return _HideDEF;
            }
            set
            {
                OnHideDEFChanging(value);
                ReportPropertyChanging("HideDEF");
                _HideDEF = StructuralObject.SetValidValue(value, "HideDEF");
                ReportPropertyChanged("HideDEF");
                OnHideDEFChanged();
            }
        }
        private global::System.Boolean _HideDEF;
        partial void OnHideDEFChanging(global::System.Boolean value);
        partial void OnHideDEFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HideK
        {
            get
            {
                return _HideK;
            }
            set
            {
                OnHideKChanging(value);
                ReportPropertyChanging("HideK");
                _HideK = StructuralObject.SetValidValue(value, "HideK");
                ReportPropertyChanged("HideK");
                OnHideKChanged();
            }
        }
        private global::System.Boolean _HideK;
        partial void OnHideKChanging(global::System.Boolean value);
        partial void OnHideKChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HideQueue
        {
            get
            {
                return _HideQueue;
            }
            set
            {
                OnHideQueueChanging(value);
                ReportPropertyChanging("HideQueue");
                _HideQueue = StructuralObject.SetValidValue(value, "HideQueue");
                ReportPropertyChanged("HideQueue");
                OnHideQueueChanged();
            }
        }
        private global::System.Boolean _HideQueue;
        partial void OnHideQueueChanging(global::System.Boolean value);
        partial void OnHideQueueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowHighlighting
        {
            get
            {
                return _ShowHighlighting;
            }
            set
            {
                OnShowHighlightingChanging(value);
                ReportPropertyChanging("ShowHighlighting");
                _ShowHighlighting = StructuralObject.SetValidValue(value, "ShowHighlighting");
                ReportPropertyChanged("ShowHighlighting");
                OnShowHighlightingChanged();
            }
        }
        private global::System.Boolean _ShowHighlighting;
        partial void OnShowHighlightingChanging(global::System.Boolean value);
        partial void OnShowHighlightingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LockHighlighting
        {
            get
            {
                return _LockHighlighting;
            }
            set
            {
                OnLockHighlightingChanging(value);
                ReportPropertyChanging("LockHighlighting");
                _LockHighlighting = StructuralObject.SetValidValue(value, "LockHighlighting");
                ReportPropertyChanged("LockHighlighting");
                OnLockHighlightingChanged();
            }
        }
        private global::System.Boolean _LockHighlighting;
        partial void OnLockHighlightingChanging(global::System.Boolean value);
        partial void OnLockHighlightingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HighlightColor
        {
            get
            {
                return _HighlightColor;
            }
            set
            {
                OnHighlightColorChanging(value);
                ReportPropertyChanging("HighlightColor");
                _HighlightColor = StructuralObject.SetValidValue(value, true, "HighlightColor");
                ReportPropertyChanged("HighlightColor");
                OnHighlightColorChanged();
            }
        }
        private global::System.String _HighlightColor;
        partial void OnHighlightColorChanging(global::System.String value);
        partial void OnHighlightColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddTimestamp;
        partial void OnAddTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="Position")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Position : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Position object.
        /// </summary>
        /// <param name="posId">Initial value of the PosId property.</param>
        /// <param name="posCode">Initial value of the PosCode property.</param>
        /// <param name="posDesc">Initial value of the PosDesc property.</param>
        public static Position CreatePosition(global::System.Int32 posId, global::System.String posCode, global::System.String posDesc)
        {
            Position position = new Position();
            position.PosId = posId;
            position.PosCode = posCode;
            position.PosDesc = posDesc;
            return position;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PosId
        {
            get
            {
                return _PosId;
            }
            set
            {
                if (_PosId != value)
                {
                    OnPosIdChanging(value);
                    ReportPropertyChanging("PosId");
                    _PosId = StructuralObject.SetValidValue(value, "PosId");
                    ReportPropertyChanged("PosId");
                    OnPosIdChanged();
                }
            }
        }
        private global::System.Int32 _PosId;
        partial void OnPosIdChanging(global::System.Int32 value);
        partial void OnPosIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PosCode
        {
            get
            {
                return _PosCode;
            }
            set
            {
                OnPosCodeChanging(value);
                ReportPropertyChanging("PosCode");
                _PosCode = StructuralObject.SetValidValue(value, false, "PosCode");
                ReportPropertyChanged("PosCode");
                OnPosCodeChanged();
            }
        }
        private global::System.String _PosCode;
        partial void OnPosCodeChanging(global::System.String value);
        partial void OnPosCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PosDesc
        {
            get
            {
                return _PosDesc;
            }
            set
            {
                OnPosDescChanging(value);
                ReportPropertyChanging("PosDesc");
                _PosDesc = StructuralObject.SetValidValue(value, false, "PosDesc");
                ReportPropertyChanged("PosDesc");
                OnPosDescChanged();
            }
        }
        private global::System.String _PosDesc;
        partial void OnPosDescChanging(global::System.String value);
        partial void OnPosDescChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="Rank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Rank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Rank object.
        /// </summary>
        /// <param name="rankId">Initial value of the RankId property.</param>
        /// <param name="rankName">Initial value of the RankName property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="rankDate">Initial value of the RankDate property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static Rank CreateRank(global::System.Int32 rankId, global::System.String rankName, global::System.Int16 year, global::System.DateTime rankDate, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp)
        {
            Rank rank = new Rank();
            rank.RankId = rankId;
            rank.RankName = rankName;
            rank.Year = year;
            rank.RankDate = rankDate;
            rank.AddTimestamp = addTimestamp;
            rank.LastUpdateTimestamp = lastUpdateTimestamp;
            return rank;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RankId
        {
            get
            {
                return _RankId;
            }
            set
            {
                if (_RankId != value)
                {
                    OnRankIdChanging(value);
                    ReportPropertyChanging("RankId");
                    _RankId = StructuralObject.SetValidValue(value, "RankId");
                    ReportPropertyChanged("RankId");
                    OnRankIdChanged();
                }
            }
        }
        private global::System.Int32 _RankId;
        partial void OnRankIdChanging(global::System.Int32 value);
        partial void OnRankIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RankName
        {
            get
            {
                return _RankName;
            }
            set
            {
                OnRankNameChanging(value);
                ReportPropertyChanging("RankName");
                _RankName = StructuralObject.SetValidValue(value, false, "RankName");
                ReportPropertyChanged("RankName");
                OnRankNameChanged();
            }
        }
        private global::System.String _RankName;
        partial void OnRankNameChanging(global::System.String value);
        partial void OnRankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, "Year");
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int16 _Year;
        partial void OnYearChanging(global::System.Int16 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RankDate
        {
            get
            {
                return _RankDate;
            }
            set
            {
                OnRankDateChanging(value);
                ReportPropertyChanging("RankDate");
                _RankDate = StructuralObject.SetValidValue(value, "RankDate");
                ReportPropertyChanged("RankDate");
                OnRankDateChanged();
            }
        }
        private global::System.DateTime _RankDate;
        partial void OnRankDateChanging(global::System.DateTime value);
        partial void OnRankDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, true, "Url");
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerRank_Rank", "PlayerRank")]
        public EntityCollection<PlayerRank> PlayerRanks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerRank>("HomeModel.FK_PlayerRank_Rank", "PlayerRank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerRank>("HomeModel.FK_PlayerRank_Rank", "PlayerRank", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static Role CreateRole(global::System.Int32 roleId)
        {
            Role role = new Role();
            role.RoleId = roleId;
            return role;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleDescription
        {
            get
            {
                return _RoleDescription;
            }
            set
            {
                OnRoleDescriptionChanging(value);
                ReportPropertyChanging("RoleDescription");
                _RoleDescription = StructuralObject.SetValidValue(value, true, "RoleDescription");
                ReportPropertyChanged("RoleDescription");
                OnRoleDescriptionChanged();
            }
        }
        private global::System.String _RoleDescription;
        partial void OnRoleDescriptionChanging(global::System.String value);
        partial void OnRoleDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_UserRole_Role", "UserRole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("HomeModel.FK_UserRole_Role", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("HomeModel.FK_UserRole_Role", "UserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="addTimestamp">Initial value of the AddTimestamp property.</param>
        /// <param name="lastUpdateTimestamp">Initial value of the LastUpdateTimestamp property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String userName, global::System.String fullName, global::System.Boolean isActive, global::System.DateTime addTimestamp, global::System.DateTime lastUpdateTimestamp)
        {
            User user = new User();
            user.UserId = userId;
            user.UserName = userName;
            user.FullName = fullName;
            user.IsActive = isActive;
            user.AddTimestamp = addTimestamp;
            user.LastUpdateTimestamp = lastUpdateTimestamp;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true, "FullName");
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, true, "NickName");
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Password
        {
            get
            {
                return StructuralObject.GetValidValue(_Password);
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true, "Password");
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.Byte[] _Password;
        partial void OnPasswordChanging(global::System.Byte[] value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Salt
        {
            get
            {
                return StructuralObject.GetValidValue(_Salt);
            }
            set
            {
                OnSaltChanging(value);
                ReportPropertyChanging("Salt");
                _Salt = StructuralObject.SetValidValue(value, true, "Salt");
                ReportPropertyChanged("Salt");
                OnSaltChanged();
            }
        }
        private global::System.Byte[] _Salt;
        partial void OnSaltChanging(global::System.Byte[] value);
        partial void OnSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLogin
        {
            get
            {
                return _LastLogin;
            }
            set
            {
                OnLastLoginChanging(value);
                ReportPropertyChanging("LastLogin");
                _LastLogin = StructuralObject.SetValidValue(value, "LastLogin");
                ReportPropertyChanged("LastLogin");
                OnLastLoginChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLogin;
        partial void OnLastLoginChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AddTimestamp
        {
            get
            {
                return _AddTimestamp;
            }
            set
            {
                OnAddTimestampChanging(value);
                ReportPropertyChanging("AddTimestamp");
                _AddTimestamp = StructuralObject.SetValidValue(value, "AddTimestamp");
                ReportPropertyChanged("AddTimestamp");
                OnAddTimestampChanged();
            }
        }
        private global::System.DateTime _AddTimestamp;
        partial void OnAddTimestampChanging(global::System.DateTime value);
        partial void OnAddTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateTimestamp
        {
            get
            {
                return _LastUpdateTimestamp;
            }
            set
            {
                OnLastUpdateTimestampChanging(value);
                ReportPropertyChanging("LastUpdateTimestamp");
                _LastUpdateTimestamp = StructuralObject.SetValidValue(value, "LastUpdateTimestamp");
                ReportPropertyChanged("LastUpdateTimestamp");
                OnLastUpdateTimestampChanged();
            }
        }
        private global::System.DateTime _LastUpdateTimestamp;
        partial void OnLastUpdateTimestampChanging(global::System.DateTime value);
        partial void OnLastUpdateTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastMessageView
        {
            get
            {
                return _LastMessageView;
            }
            set
            {
                OnLastMessageViewChanging(value);
                ReportPropertyChanging("LastMessageView");
                _LastMessageView = StructuralObject.SetValidValue(value, "LastMessageView");
                ReportPropertyChanged("LastMessageView");
                OnLastMessageViewChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastMessageView;
        partial void OnLastMessageViewChanging(Nullable<global::System.DateTime> value);
        partial void OnLastMessageViewChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_UserRole_User", "UserRole")]
        public EntityCollection<UserRole> UserRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("HomeModel.FK_UserRole_User", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("HomeModel.FK_UserRole_User", "UserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Message_User", "Message")]
        public EntityCollection<Message> Messages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Message>("HomeModel.FK_Message_User", "Message");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Message>("HomeModel.FK_Message_User", "Message", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftChat_User", "DraftChat")]
        public EntityCollection<DraftChat> DraftChats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DraftChat>("HomeModel.FK_DraftChat_User", "DraftChat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DraftChat>("HomeModel.FK_DraftChat_User", "DraftChat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftOwner_User", "DraftOwner")]
        public EntityCollection<DraftOwner> DraftOwners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DraftOwner>("HomeModel.FK_DraftOwner_User", "DraftOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DraftOwner>("HomeModel.FK_DraftOwner_User", "DraftOwner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftPick_User", "DraftPick")]
        public EntityCollection<DraftPick> DraftPicks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DraftPick>("HomeModel.FK_DraftPick_User", "DraftPick");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DraftPick>("HomeModel.FK_DraftPick_User", "DraftPick", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_DraftRank_User", "DraftRank")]
        public EntityCollection<DraftRank> DraftRanks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DraftRank>("HomeModel.FK_DraftRank_User", "DraftRank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DraftRank>("HomeModel.FK_DraftRank_User", "DraftRank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_LeagueOwner_User", "LeagueOwner")]
        public EntityCollection<LeagueOwner> LeagueOwners
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LeagueOwner>("HomeModel.FK_LeagueOwner_User", "LeagueOwner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LeagueOwner>("HomeModel.FK_LeagueOwner_User", "LeagueOwner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Draft_RunnerUp", "Draft")]
        public EntityCollection<Draft> Drafts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Draft>("HomeModel.FK_Draft_RunnerUp", "Draft");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Draft>("HomeModel.FK_Draft_RunnerUp", "Draft", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_Draft_Winner", "Draft")]
        public EntityCollection<Draft> Drafts1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Draft>("HomeModel.FK_Draft_Winner", "Draft");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Draft>("HomeModel.FK_Draft_Winner", "Draft", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerAdjustment_User", "PlayerAdjustment")]
        public EntityCollection<PlayerAdjustment> PlayerAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerAdjustment>("HomeModel.FK_PlayerAdjustment_User", "PlayerAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerAdjustment>("HomeModel.FK_PlayerAdjustment_User", "PlayerAdjustment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_PlayerHighlight_User", "PlayerHighlight")]
        public EntityCollection<PlayerHighlight> PlayerHighlights
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PlayerHighlight>("HomeModel.FK_PlayerHighlight_User", "PlayerHighlight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PlayerHighlight>("HomeModel.FK_PlayerHighlight_User", "PlayerHighlight", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="UserApplicant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserApplicant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserApplicant object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="pword">Initial value of the Pword property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="accepted">Initial value of the Accepted property.</param>
        /// <param name="rejected">Initial value of the Rejected property.</param>
        public static UserApplicant CreateUserApplicant(global::System.String userId, global::System.String pword, global::System.String firstName, global::System.String lastName, global::System.String accepted, global::System.String rejected)
        {
            UserApplicant userApplicant = new UserApplicant();
            userApplicant.UserId = userId;
            userApplicant.Pword = pword;
            userApplicant.FirstName = firstName;
            userApplicant.LastName = lastName;
            userApplicant.Accepted = accepted;
            userApplicant.Rejected = rejected;
            return userApplicant;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Pword
        {
            get
            {
                return _Pword;
            }
            set
            {
                OnPwordChanging(value);
                ReportPropertyChanging("Pword");
                _Pword = StructuralObject.SetValidValue(value, false, "Pword");
                ReportPropertyChanged("Pword");
                OnPwordChanged();
            }
        }
        private global::System.String _Pword;
        partial void OnPwordChanging(global::System.String value);
        partial void OnPwordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true, "Address1");
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true, "Address2");
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Secret
        {
            get
            {
                return _Secret;
            }
            set
            {
                OnSecretChanging(value);
                ReportPropertyChanging("Secret");
                _Secret = StructuralObject.SetValidValue(value, true, "Secret");
                ReportPropertyChanged("Secret");
                OnSecretChanged();
            }
        }
        private global::System.String _Secret;
        partial void OnSecretChanging(global::System.String value);
        partial void OnSecretChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Accepted
        {
            get
            {
                return _Accepted;
            }
            set
            {
                OnAcceptedChanging(value);
                ReportPropertyChanging("Accepted");
                _Accepted = StructuralObject.SetValidValue(value, false, "Accepted");
                ReportPropertyChanged("Accepted");
                OnAcceptedChanged();
            }
        }
        private global::System.String _Accepted;
        partial void OnAcceptedChanging(global::System.String value);
        partial void OnAcceptedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Rejected
        {
            get
            {
                return _Rejected;
            }
            set
            {
                OnRejectedChanging(value);
                ReportPropertyChanging("Rejected");
                _Rejected = StructuralObject.SetValidValue(value, false, "Rejected");
                ReportPropertyChanged("Rejected");
                OnRejectedChanged();
            }
        }
        private global::System.String _Rejected;
        partial void OnRejectedChanging(global::System.String value);
        partial void OnRejectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AddDateTime
        {
            get
            {
                return _AddDateTime;
            }
            set
            {
                OnAddDateTimeChanging(value);
                ReportPropertyChanging("AddDateTime");
                _AddDateTime = StructuralObject.SetValidValue(value, "AddDateTime");
                ReportPropertyChanged("AddDateTime");
                OnAddDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _AddDateTime;
        partial void OnAddDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnAddDateTimeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="UserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserProfile object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static UserProfile CreateUserProfile(global::System.Int32 userId)
        {
            UserProfile userProfile = new UserProfile();
            userProfile.UserId = userId;
            return userProfile;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true, "UserName");
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HomeModel", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static UserRole CreateUserRole(global::System.Int32 userId, global::System.Int32 roleId)
        {
            UserRole userRole = new UserRole();
            userRole.UserId = userId;
            userRole.RoleId = roleId;
            return userRole;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, "UserId");
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value, "RoleId");
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_UserRole_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("HomeModel.FK_UserRole_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("HomeModel.FK_UserRole_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("HomeModel.FK_UserRole_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("HomeModel.FK_UserRole_Role", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_UserRole_UserRole", "UserRole1")]
        public UserRole UserRole1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("HomeModel.FK_UserRole_UserRole", "UserRole1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("HomeModel.FK_UserRole_UserRole", "UserRole1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserRole> UserRole1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("HomeModel.FK_UserRole_UserRole", "UserRole1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserRole>("HomeModel.FK_UserRole_UserRole", "UserRole1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_UserRole_UserRole", "UserRole")]
        public UserRole UserRole2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("HomeModel.FK_UserRole_UserRole", "UserRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("HomeModel.FK_UserRole_UserRole", "UserRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserRole> UserRole2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserRole>("HomeModel.FK_UserRole_UserRole", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserRole>("HomeModel.FK_UserRole_UserRole", "UserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HomeModel", "FK_UserRole_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_UserRole_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_UserRole_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HomeModel.FK_UserRole_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HomeModel.FK_UserRole_User", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
